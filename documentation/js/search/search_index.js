var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.29,1,2.425]],["body/controllers/AppController.html",[0,1.666,1,3.606,2,1.196,3,0.269,4,0.217,5,0.167,6,2.814,7,0.48,8,1.571,9,3.919,10,3.304,11,4.701,12,1.196,13,0.022,14,1.897,15,3.47,16,5.31,17,4.246,18,6.234,19,0.55,20,3.304,21,4.602,22,3.919,23,4.602,24,3.051,25,3.919,26,2.452,27,6.234,28,3.238,29,2.643,30,3.919,31,4.602,32,1.004,33,0.796,34,0.48,35,0.844,36,1.128,37,5.726,38,4.51,39,1.482,40,0.613,41,0.707,42,3.041,43,2.814,44,1.897,45,1.897,46,0.948,47,3.304,48,0.269,49,0.08,50,2.058,51,2.814,52,3.304,53,3.304,54,3.304,55,3.304,56,3.304,57,2.814,58,3.304,59,1.437,60,1.35,61,2.058,62,3.304,63,3.304,64,1.64,65,2.814,66,3.304,67,3.304,68,1.128,69,3.304,70,0.014,71,0.014]],["title/modules/AppModule.html",[72,1.216,73,2.425]],["body/modules/AppModule.html",[1,3.715,2,1.733,3,0.285,4,0.229,5,0.176,13,0.023,40,0.718,41,0.748,42,3.643,43,2.977,48,0.285,49,0.085,70,0.015,71,0.015,72,1.633,73,4.847,74,1.521,75,1.955,76,2.977,77,2.977,78,2.977,79,3.951,80,3.951,81,2.76,82,3.951,83,3.951,84,3.951,85,2.375,86,1.735,87,1.622,88,3.496,89,2.549,90,2.748,91,3.496,92,3.496,93,3.496,94,3.496,95,3.496,96,3.496,97,3.496]],["title/injectables/AppService.html",[42,2.045,98,1.021]],["body/injectables/AppService.html",[3,0.367,4,0.295,5,0.227,7,0.654,8,1.928,9,4.81,13,0.023,16,4.81,19,0.749,32,1.368,33,1.084,34,0.654,35,1.15,39,1.449,40,0.482,41,0.963,42,3.244,48,0.367,49,0.109,65,4.81,68,1.537,70,0.018,71,0.018,98,1.62,99,2.089,100,3.834,101,4.501,102,1.653,103,4.501,104,5.648,105,4.501,106,3.834,107,4.501,108,4.501]],["title/controllers/AuthController.html",[0,1.29,109,2.425]],["body/controllers/AuthController.html",[0,1.19,2,1.19,3,0.268,4,0.215,5,0.166,7,0.477,8,1.565,12,1.66,13,0.023,14,1.887,19,0.763,25,3.904,26,2.442,28,2.276,32,1.393,33,1.104,34,0.666,35,1.171,39,1.476,40,0.698,41,0.703,44,1.887,45,3.032,46,0.942,48,0.268,49,0.08,59,1.43,60,1.343,68,1.565,70,0.014,71,0.014,109,3.122,110,2.799,111,2.046,112,2.799,113,3.891,114,4.584,115,2.799,116,3.558,117,3.286,118,4.584,119,3.122,120,3.456,121,4.584,122,3.286,123,1.887,124,3.286,125,2.125,126,2.276,127,2.442,128,3.456,129,3.286,130,3.286,131,1.887,132,2.238,133,2.238,134,2.855,135,2.046,136,2.855,137,3.032,138,2.799,139,2.799,140,2.046,141,2.799,142,2.799,143,2.046,144,1.263,145,2.238,146,2.238,147,3.286,148,2.799,149,3.286,150,3.286,151,3.286,152,3.122,153,3.286,154,3.286,155,3.286,156,3.286,157,2.046,158,3.286,159,2.799]],["title/modules/AuthModule.html",[72,1.216,79,2.218]],["body/modules/AuthModule.html",[2,1.835,3,0.31,4,0.249,5,0.192,13,0.023,40,0.711,41,0.814,48,0.31,49,0.093,70,0.016,71,0.016,72,1.729,74,1.655,75,2.07,79,4.294,81,2.83,85,2.515,86,1.889,87,1.766,89,2.699,90,2.909,109,3.879,137,3.735,138,3.24,144,1.463,160,3.24,161,3.805,162,3.24,163,4.05,164,3.805,165,3.805,166,2.37,167,3.805,168,2.869,169,2.37,170,3.805,171,2.37,172,2.37,173,1.889,174,3.805,175,3.805,176,3.24,177,3.805,178,3.805,179,3.805]],["title/injectables/AuthService.html",[98,1.021,137,2.045]],["body/injectables/AuthService.html",[3,0.263,4,0.211,5,0.163,7,0.468,8,1.544,13,0.023,19,0.753,24,1.718,32,1.375,33,1.09,34,0.657,35,1.155,39,1.038,40,0.662,41,0.689,48,0.263,49,0.078,50,2.817,60,1.849,64,2.594,68,1.101,70,0.014,71,0.014,98,1.297,99,1.497,113,3.081,115,3.853,116,3.853,120,2.431,123,2.598,125,1.934,126,2.246,137,2.598,139,2.746,140,2.008,141,2.746,142,2.746,168,2.431,180,2.746,181,2.784,182,2.598,183,1.852,184,2.136,185,5.967,186,3.224,187,1.601,188,3.224,189,2.746,190,3.411,191,1.852,192,3.224,193,3.224,194,2.784,195,1.852,196,3.224,197,3.224,198,4.524,199,2.746,200,3.224,201,2.41,202,2.431,203,2.817,204,2.1,205,4.524,206,4.524,207,3.94,208,4.524,209,3.224,210,3.224,211,3.224,212,4.524,213,3.224,214,3.411,215,1.497,216,3.224]],["title/classes/CreateOrderDto.html",[49,0.087,217,2.218]],["body/classes/CreateOrderDto.html",[3,0.271,4,0.218,5,0.168,7,0.482,12,1.673,13,0.022,17,3.146,19,0.768,29,2.653,34,0.834,36,1.813,40,0.615,46,0.953,48,0.271,49,0.129,51,2.829,70,0.014,71,0.014,112,2.829,126,2.849,127,1.77,217,2.877,218,1.07,219,4.004,220,2.829,221,1.577,222,3.307,223,5.31,224,3.617,225,3.322,226,3.322,227,4.619,228,3.483,229,4.619,230,4.619,231,4.619,232,6.033,233,4.619,234,4.549,235,2.829,236,3.322,237,2.293,238,2.829,239,3.934,240,3.483,241,4.523,242,4.619,243,2.465,244,3.146,245,3.322,246,3.058,247,2.829,248,3.934,249,3.483,250,3.934,251,4.619,252,1.77,253,1.07,254,1.908,255,2.263,256,1.134,257,3.322,258,3.322,259,3.322,260,3.322,261,3.322,262,3.322,263,2.829,264,3.322,265,3.322,266,2.263,267,3.322,268,2.263,269,3.322,270,3.322,271,3.322,272,3.322,273,3.322]],["title/classes/CreateOrderProductDto.html",[49,0.087,224,2.425]],["body/classes/CreateOrderProductDto.html",[3,0.292,4,0.235,5,0.181,7,0.521,12,2.003,13,0.022,19,0.92,28,2.418,34,0.803,36,2.183,40,0.522,46,1.029,48,0.292,49,0.118,70,0.015,71,0.015,102,1.515,218,1.156,219,4.472,221,1.663,224,3.318,234,3.673,237,2.418,238,3.057,243,2.968,244,3.318,246,3.16,248,4.149,249,3.673,250,4.149,252,1.912,254,3.406,256,1.663,274,2.445,275,4.71,276,4.71,277,2.706,278,4.871,279,4.472,280,4.871,281,4.871,282,3.589,283,3.589,284,4.871,285,4.871,286,4.871,287,4.871,288,4.871,289,3.057,290,4.871,291,4.871,292,3.057,293,3.318]],["title/classes/CreateProductDto.html",[49,0.087,294,2.045]],["body/classes/CreateProductDto.html",[3,0.272,4,0.219,5,0.169,7,0.485,12,2.084,13,0.022,19,0.957,28,2.856,33,1.283,34,0.836,36,2.19,40,0.497,46,0.958,48,0.272,49,0.113,70,0.014,71,0.014,102,1.598,218,1.076,221,1.583,237,2.302,243,3.036,246,3.22,252,1.78,274,2.275,277,3.496,279,4.932,289,2.845,292,2.845,293,3.627,294,2.663,295,5.148,296,3.059,297,4.016,298,4.637,299,4.9,300,4.637,301,3.949,302,4.637,303,4.637,304,4.637,305,2.845,306,3.949,307,3.949,308,3.34,309,3.949,310,3.949,311,3.34,312,3.34,313,4.637,314,4.637,315,3.34,316,3.949,317,3.949,318,3.34,319,2.845]],["title/classes/CreateTableDto.html",[49,0.087,320,2.045]],["body/classes/CreateTableDto.html",[3,0.356,4,0.286,5,0.221,7,0.635,12,1.583,13,0.022,17,3.776,19,0.727,34,0.635,36,1.492,40,0.594,46,1.253,48,0.356,49,0.135,70,0.017,71,0.017,126,2.752,218,1.407,221,1.893,237,3.281,239,4.722,240,4.18,243,2.573,244,3.776,246,2.954,249,3.295,252,2.328,316,4.722,320,3.184,321,4.722,322,3.295,323,4.37,324,4.37,325,4.722,326,4.18,327,4.37,328,4.37,329,4.37,330,4.37]],["title/classes/CreateUserDto.html",[49,0.087,331,2.045]],["body/classes/CreateUserDto.html",[3,0.223,4,0.18,5,0.138,7,0.398,12,2.028,13,0.022,17,2.741,19,0.932,28,2.61,33,1.149,34,0.813,36,1.912,40,0.431,46,0.786,48,0.223,49,0.098,57,4.478,70,0.012,71,0.012,102,1.645,113,3.581,125,1.374,127,3.308,194,2.542,195,2.74,207,4.681,218,0.882,221,1.374,243,2.99,246,3.12,252,1.46,277,3.035,293,3.581,296,2.74,305,2.334,306,3.428,309,4.478,317,3.428,325,4.478,326,3.964,331,2.312,332,4.987,333,2.066,334,4.771,335,2.334,336,4.025,337,4.025,338,3.964,339,2.74,340,4.025,341,4.025,342,4.025,343,4.025,344,4.025,345,4.025,346,4.025,347,4.025,348,5.258,349,4.025,350,2.74,351,4.025,352,4.025,353,3.428,354,3.428,355,2.74,356,4.025,357,4.025,358,3.035,359,2.74,360,2.74,361,4.025,362,4.025,363,4.025,364,4.025,365,2.74,366,2.74,367,2.74,368,2.74,369,2.74,370,2.74,371,2.74]],["title/injectables/JwtStrategy.html",[98,1.021,163,2.218]],["body/injectables/JwtStrategy.html",[3,0.293,4,0.236,5,0.182,7,0.523,8,1.666,13,0.023,19,0.812,32,1.483,33,1.176,34,0.862,35,1.247,39,1.159,40,0.636,41,0.77,48,0.293,49,0.088,59,1.566,60,1.471,64,1.787,68,1.229,70,0.015,71,0.015,98,1.4,99,1.671,102,0.919,125,1.891,127,1.918,128,2.714,144,1.384,163,3.04,173,1.787,176,3.066,181,2.951,182,2.068,183,2.068,184,2.427,187,2.423,189,4.157,191,2.068,194,2.601,199,3.066,201,1.918,202,2.714,203,2.242,204,1.671,214,2.714,215,1.671,241,3.066,372,3.066,373,4.881,374,3.6,375,4.881,376,4.881,377,3.6,378,3.6,379,3.6,380,3.6,381,3.6,382,3.6,383,3.066,384,2.242,385,3.6,386,3.6,387,3.6,388,3.6,389,3.6,390,3.066,391,3.6,392,3.6,393,3.324,394,3.6]],["title/classes/LoginDto.html",[49,0.087,116,2.218]],["body/classes/LoginDto.html",[3,0.34,4,0.274,5,0.211,7,0.606,12,1.949,13,0.022,19,0.895,34,0.782,36,1.838,40,0.576,46,1.197,48,0.34,49,0.131,70,0.017,71,0.017,102,1.608,116,3.352,127,3.354,194,3.471,195,3.422,207,4.059,218,1.344,221,1.838,243,2.922,246,3.174,252,2.224,293,4.058,338,4.059,358,4.059,395,3.555,396,5.383,397,4.174,398,4.174,399,5.958]],["title/classes/LoginResponseDto.html",[49,0.087,140,2.218]],["body/classes/LoginResponseDto.html",[3,0.341,4,0.275,5,0.211,7,0.608,12,1.954,13,0.022,19,0.897,34,0.783,36,1.842,40,0.578,46,1.201,48,0.341,49,0.102,70,0.017,71,0.017,102,1.378,113,3.674,120,4.5,125,2.28,127,2.874,128,4.068,140,3.36,145,2.852,173,2.678,218,1.349,221,1.842,243,2.504,246,3.18,335,4.595,400,5.083,401,3.567,402,5.395,403,3.36,404,5.395,405,4.188,406,5.395,407,4.188]],["title/classes/Order.html",[49,0.087,254,2.045]],["body/classes/Order.html",[3,0.319,4,0.257,5,0.198,7,0.569,13,0.022,19,1.091,34,0.952,35,1.795,40,0.619,48,0.319,49,0.095,70,0.016,71,0.016,102,1.319,125,2.238,145,2.667,218,1.261,221,1.763,222,3.598,254,2.966,256,1.972,408,3.335,409,3.598,410,3.255,411,3.598,412,3.825,413,3.916,414,3.916,415,2.868,416,3.916,417,3.916,418,3.916,419,3.916,420,3.916,421,3.916]],["title/controllers/OrderController.html",[0,1.29,422,2.425]],["body/controllers/OrderController.html",[0,1.125,2,1.125,3,0.253,4,0.204,5,0.157,7,0.451,8,1.505,12,1.855,13,0.023,14,1.785,15,3.324,19,0.852,26,2.97,32,1.34,33,1.062,34,0.64,35,1.126,39,1.65,40,0.673,41,0.665,44,1.785,45,3.201,46,0.891,48,0.253,49,0.076,59,1.352,60,1.27,61,1.936,68,1.749,70,0.014,71,0.014,102,1.308,111,1.936,125,1.903,131,2.532,134,2.745,135,1.936,136,2.745,143,1.936,144,1.195,145,2.117,146,2.117,148,2.647,152,3.489,157,1.936,159,2.647,217,4.001,228,3.324,234,4.203,253,1.42,254,1.785,256,1.903,403,2.745,422,3.002,423,2.647,424,2.767,425,2.188,426,3.108,427,2.117,428,3.002,429,3.108,430,3.002,431,3.324,432,4.408,433,3.108,434,1.543,435,2.117,436,3.108,437,2.942,438,2.647,439,1.543,440,2.647,441,2.343,442,3.108,443,3.108,444,3.108,445,3.108,446,3.108,447,2.117,448,2.117,449,3.108]],["title/modules/OrderModule.html",[72,1.216,80,2.218]],["body/modules/OrderModule.html",[2,1.954,3,0.341,4,0.275,5,0.211,13,0.022,40,0.699,41,0.896,48,0.341,49,0.102,70,0.017,71,0.017,72,1.842,74,1.822,75,2.205,80,4.286,81,2.838,85,2.678,86,2.079,87,1.944,89,2.874,90,2.405,144,1.61,166,2.608,169,2.608,171,2.608,172,2.608,173,2.079,422,4.065,437,3.835,438,3.567,450,3.567,451,3.567,452,4.188,453,4.188,454,4.188,455,3.158]],["title/injectables/OrderService.html",[98,1.021,437,2.045]],["body/injectables/OrderService.html",[3,0.22,4,0.177,5,0.136,7,0.393,8,1.361,13,0.023,19,0.869,32,1.438,33,1.342,34,0.687,35,1.209,36,0.923,39,1.524,40,0.596,41,0.578,48,0.22,49,0.066,50,1.684,60,1.105,64,1.342,68,1.616,70,0.012,71,0.012,98,1.143,99,1.255,102,1.422,125,1.783,182,2.289,183,1.553,184,2.135,187,2.35,191,1.553,217,3.753,222,2.948,237,1.342,253,1.283,256,1.361,263,2.302,275,2.302,276,2.302,410,2.593,415,1.978,424,2.593,425,1.978,434,1.978,437,2.289,439,1.342,440,2.302,456,2.302,457,2.703,458,2.703,459,2.703,460,2.703,461,2.703,462,2.038,463,1.553,464,1.553,465,1.841,466,2.703,467,2.714,468,2.703,469,3.985,470,2.703,471,2.703,472,2.703,473,2.703,474,2.703,475,2.703,476,2.703,477,2.703,478,5.668,479,4.733,480,3.985,481,4.733,482,2.703,483,3.985,484,4.031,485,1.841,486,2.703,487,2.703,488,2.703,489,2.703,490,2.302,491,2.703,492,2.703]],["title/modules/PrismaModule.html",[72,1.216,81,1.549]],["body/modules/PrismaModule.html",[3,0.355,4,0.285,5,0.22,13,0.022,40,0.592,41,0.931,48,0.355,49,0.106,70,0.017,71,0.017,72,1.888,74,1.895,75,2.26,81,2.982,85,2.746,86,2.162,87,2.021,89,2.947,126,2.162,184,2.902,326,3.283,493,3.709,494,3.709,495,3.709,496,4.355,497,5.531,498,4.355,499,4.355,500,4.355,501,4.355,502,4.355,503,4.355,504,4.355,505,4.355,506,4.355,507,4.355,508,4.355]],["title/injectables/PrismaService.html",[98,1.021,184,1.455]],["body/injectables/PrismaService.html",[3,0.338,4,0.272,5,0.209,7,0.602,8,1.829,13,0.023,19,0.891,32,1.26,33,0.998,34,0.602,35,1.059,39,1.726,40,0.574,41,0.886,48,0.338,49,0.101,70,0.017,71,0.017,98,1.537,99,1.924,181,3.61,184,2.19,201,2.855,384,3.338,462,3.125,509,3.53,510,5.058,511,5.359,512,6.659,513,5.359,514,6.278,515,4.145,516,3.53,517,4.145,518,4.145,519,4.145,520,4.145,521,4.145]],["title/classes/Product.html",[49,0.087,415,1.768]],["body/classes/Product.html",[3,0.332,4,0.267,5,0.206,7,0.592,13,0.022,19,1.123,33,1.419,34,0.98,35,1.693,36,2.011,48,0.332,49,0.099,70,0.016,71,0.016,102,1.748,218,1.312,221,1.809,237,2.631,256,2.011,296,3.383,297,4.441,409,3.668,411,3.668,412,3.885,415,2.631,522,3.471,523,4.075,524,4.075,525,4.075,526,4.075,527,4.075,528,4.075,529,4.075]],["title/controllers/ProductController.html",[0,1.29,530,2.425]],["body/controllers/ProductController.html",[0,0.937,2,0.937,3,0.211,4,0.17,5,0.131,7,0.376,8,1.317,12,1.98,13,0.023,14,1.486,19,0.91,26,3.253,32,1.554,33,1.231,34,0.742,35,1.306,39,1.761,40,0.614,41,0.553,44,1.486,45,3.293,46,0.742,48,0.211,49,0.063,59,1.126,60,1.057,61,1.611,68,1.867,70,0.012,71,0.012,102,1.594,111,1.611,131,2.215,132,1.762,133,1.762,134,2.403,135,1.611,136,2.403,143,1.611,144,0.995,157,1.611,215,1.201,253,1.242,255,2.627,256,2.229,279,4.79,294,3.293,403,3.572,415,1.284,424,2.538,425,1.915,427,1.762,428,1.762,430,1.762,431,2.909,434,1.284,435,1.762,439,1.284,447,1.762,448,1.762,530,2.627,531,2.204,532,2.627,533,1.79,534,2.204,535,2.587,536,2.587,537,2.587,538,5.735,539,2.587,540,2.204,541,1.951,542,2.587,543,2.587,544,1.486,545,3.803,546,1.951,547,2.587,548,2.587,549,1.951,550,2.649,551,2.204,552,1.486,553,2.587,554,2.587,555,2.204,556,1.951,557,2.587,558,2.587,559,2.587,560,2.587,561,2.587,562,1.951,563,2.587,564,1.951,565,2.587,566,1.951,567,1.951,568,2.587,569,2.204,570,2.587]],["title/modules/ProductModule.html",[72,1.216,82,2.218]],["body/modules/ProductModule.html",[2,1.954,3,0.341,4,0.275,5,0.211,13,0.022,40,0.699,41,0.896,48,0.341,49,0.102,70,0.017,71,0.017,72,1.842,74,1.822,75,2.205,81,2.838,82,4.286,85,2.678,86,2.079,87,1.944,89,2.874,90,2.405,144,1.61,166,2.608,169,2.608,171,2.608,172,2.608,173,2.079,455,3.158,530,4.065,550,3.835,551,3.567,571,3.567,572,4.188,573,3.567,574,4.188,575,4.188]],["title/injectables/ProductService.html",[98,1.021,550,2.045]],["body/injectables/ProductService.html",[3,0.216,4,0.174,5,0.134,7,0.386,8,1.343,13,0.022,19,0.963,24,2.095,26,1.415,28,1.318,29,1.525,32,1.68,33,1.332,34,0.803,35,1.412,39,1.78,40,0.62,41,0.568,48,0.216,49,0.065,59,1.155,60,1.085,64,2.571,68,1.768,70,0.012,71,0.012,98,1.128,99,1.233,102,1.479,119,2.679,123,3.175,126,1.318,181,3.348,182,1.525,183,1.525,184,2.116,187,1.953,191,1.525,201,2.759,203,1.654,204,1.233,215,1.826,253,1.267,255,2.679,256,1.768,266,1.809,268,2.679,294,3.175,393,1.809,415,2.745,424,2.325,425,1.953,434,1.318,439,1.318,463,1.525,464,1.525,465,1.809,467,2.679,485,1.809,533,1.826,534,2.262,544,1.525,545,2.917,550,2.259,552,1.525,576,2.262,577,2.656,578,2.656,579,1.809,580,2.656,581,2.656,582,2.656,583,3.19,584,2.656,585,2.002,586,2.656,587,2.002,588,2.002,589,2.002,590,2.002,591,2.656,592,2.262,593,2.656,594,2.262,595,2.002,596,2.656,597,2.002,598,3.532,599,2.656,600,2.002,601,2.002,602,2.656,603,2.002,604,2.656,605,2.002,606,2.656,607,2.002,608,2.966,609,2.002,610,2.002,611,1.654,612,2.002,613,2.002,614,2.002,615,2.002,616,2.656,617,2.966,618,2.002,619,2.656,620,2.966,621,2.002,622,2.656]],["title/classes/Table.html",[49,0.087,410,1.768]],["body/classes/Table.html",[3,0.369,4,0.297,5,0.229,7,0.659,13,0.021,19,1.079,34,0.942,35,1.741,48,0.369,49,0.11,70,0.018,71,0.018,102,1.158,218,1.46,221,1.937,237,3.074,256,1.937,409,3.857,410,2.817,411,3.857,412,4.042,623,3.862,624,4.535,625,4.535,626,4.535,627,4.535,628,4.535,629,4.535]],["title/controllers/TableController.html",[0,1.29,630,2.425]],["body/controllers/TableController.html",[0,0.949,2,0.949,3,0.214,4,0.172,5,0.132,7,0.381,8,1.33,12,1.991,13,0.023,14,1.505,19,0.915,22,5.22,32,1.564,33,1.239,34,0.747,35,1.314,39,1.771,40,0.639,41,0.56,44,1.505,45,2.669,46,0.752,48,0.214,49,0.064,59,1.14,61,1.632,68,1.757,70,0.012,71,0.012,102,1.565,111,1.632,123,3.52,131,2.237,132,1.785,133,1.785,134,2.426,135,1.632,136,2.426,143,1.632,144,1.008,152,2.653,157,1.632,215,2.157,240,4.622,253,1.254,256,2.138,320,2.955,403,3.205,410,1.934,424,2.554,425,1.934,427,1.785,428,1.785,430,1.785,434,1.301,435,1.785,439,1.301,447,1.785,448,1.785,533,1.808,541,1.976,544,1.505,546,1.976,549,1.976,552,1.505,556,1.976,562,1.976,564,1.976,566,1.976,567,1.976,579,1.785,583,3.504,630,2.653,631,2.232,632,2.232,633,2.621,634,3.895,635,2.621,636,2.621,637,3.895,638,3.895,639,2.621,640,2.621,641,2.621,642,3.205,643,3.895,644,2.621,645,2.621,646,2.669,647,2.232,648,2.937,649,2.232,650,2.621,651,2.621,652,2.621,653,2.621,654,2.621,655,2.621,656,2.621,657,2.621,658,2.621,659,2.621,660,2.621,661,2.621,662,2.621]],["title/modules/TableModule.html",[72,1.216,83,2.218]],["body/modules/TableModule.html",[2,1.954,3,0.341,4,0.275,5,0.211,13,0.022,40,0.699,41,0.896,48,0.341,49,0.102,70,0.017,71,0.017,72,1.842,74,1.822,75,2.205,81,2.838,83,4.286,85,2.678,86,2.079,87,1.944,89,2.874,90,2.405,144,1.61,166,2.608,169,2.608,171,2.608,172,2.608,173,2.079,455,3.158,630,4.065,646,3.835,647,3.567,663,3.567,664,3.567,665,4.188,666,4.188,667,4.188]],["title/injectables/TableService.html",[98,1.021,646,2.045]],["body/injectables/TableService.html",[3,0.216,4,0.174,5,0.134,7,0.386,8,1.343,13,0.022,19,0.963,24,2.095,26,1.415,28,1.318,29,1.525,32,1.68,33,1.332,34,0.803,35,1.412,39,1.78,40,0.62,41,0.568,48,0.216,49,0.065,59,1.155,60,1.085,64,2.571,68,1.768,70,0.012,71,0.012,98,1.128,99,1.233,102,1.479,119,2.679,123,3.175,126,1.318,181,3.348,182,1.525,183,1.525,184,2.116,187,1.953,191,1.525,201,2.759,203,1.654,204,1.233,215,1.826,253,1.267,256,1.768,266,1.809,268,2.679,320,3.175,393,1.809,410,2.745,424,2.325,425,1.953,434,1.318,439,1.318,463,1.525,464,1.525,465,1.809,467,2.679,485,1.809,533,1.826,544,1.525,552,1.525,579,1.809,583,3.19,585,2.002,587,2.002,588,2.002,589,2.002,590,2.002,592,2.262,594,2.262,595,2.002,597,2.002,598,3.532,600,2.002,601,2.002,603,2.002,605,2.002,607,2.002,608,2.966,609,2.002,610,2.002,611,1.654,612,2.002,613,2.002,614,2.002,615,2.002,617,2.966,618,2.002,620,2.966,621,2.002,632,2.262,642,2.917,646,2.259,648,2.966,649,2.262,668,2.262,669,2.656,670,2.656,671,2.656,672,2.656,673,2.656,674,2.656,675,2.656,676,2.656,677,2.656,678,2.656,679,2.656,680,2.656,681,2.656,682,2.656,683,2.656,684,2.656]],["title/classes/UpdateProductDto.html",[49,0.087,545,2.218]],["body/classes/UpdateProductDto.html",[3,0.415,4,0.334,5,0.257,13,0.022,40,0.652,46,1.46,48,0.415,49,0.124,70,0.019,71,0.019,218,1.639,253,1.639,255,3.467,274,3.467,294,2.924,384,3.17,545,3.793,685,4.336,686,3.838,687,5.091]],["title/classes/UpdateTableDto.html",[49,0.087,642,2.218]],["body/classes/UpdateTableDto.html",[3,0.415,4,0.334,5,0.257,13,0.022,40,0.652,46,1.46,48,0.415,49,0.124,70,0.019,71,0.019,218,1.639,253,1.639,320,2.924,322,3.838,384,3.17,642,3.793,648,3.838,686,3.838,688,4.336,689,5.091]],["title/classes/UpdateUserDto.html",[49,0.087,690,2.218]],["body/classes/UpdateUserDto.html",[3,0.415,4,0.334,5,0.257,13,0.022,40,0.652,46,1.46,48,0.415,49,0.124,70,0.019,71,0.019,218,1.639,253,1.639,331,2.924,333,3.838,384,3.17,686,3.838,690,3.793,691,4.336,692,3.838,693,5.091]],["title/classes/User.html",[49,0.087,125,1.216]],["body/classes/User.html",[3,0.332,4,0.267,5,0.206,7,0.592,13,0.022,19,1.123,33,1.419,34,0.98,35,1.693,48,0.332,49,0.099,70,0.016,71,0.016,102,1.782,125,1.809,194,3.138,195,3.383,218,1.312,221,1.809,256,2.011,296,3.383,409,3.668,411,3.668,412,3.885,694,3.471,695,4.075,696,4.075,697,4.075,698,4.075,699,4.075,700,4.075,701,4.075]],["title/controllers/UserController.html",[0,1.29,702,2.425]],["body/controllers/UserController.html",[0,0.925,2,0.925,3,0.208,4,0.167,5,0.129,7,0.371,8,1.304,12,1.97,13,0.023,14,1.467,15,2.881,19,0.905,26,3.241,32,1.544,33,1.224,34,0.738,35,1.297,39,1.752,40,0.611,41,0.546,44,1.467,45,3.278,46,0.733,48,0.208,49,0.062,59,1.111,60,1.044,61,1.591,68,1.857,70,0.012,71,0.012,102,1.588,111,1.591,125,0.872,127,3.241,131,2.194,132,1.74,133,1.74,134,2.38,135,1.591,136,3.387,143,1.591,144,0.982,152,3.46,157,3.164,215,1.186,228,2.881,253,1.23,256,2.123,331,3.278,403,3.555,424,2.522,425,1.897,427,1.74,428,1.74,430,2.602,431,2.881,434,1.268,435,1.74,439,1.268,447,1.74,448,1.74,532,2.602,533,1.773,540,2.176,541,1.926,544,1.467,546,1.926,549,1.926,552,1.467,555,2.176,556,1.926,562,1.926,564,1.926,566,1.926,567,1.926,569,2.176,690,3.788,692,2.881,702,2.602,703,2.176,704,2.176,705,2.554,706,2.554,707,2.554,708,4.577,709,2.554,710,3.821,711,2.554,712,3.821,713,2.554,714,2.629,715,2.176,716,2.554,717,2.554,718,2.554,719,2.554,720,2.554,721,2.554,722,2.554,723,2.554]],["title/modules/UserModule.html",[72,1.216,84,2.218]],["body/modules/UserModule.html",[2,1.949,3,0.34,4,0.274,5,0.211,13,0.022,40,0.698,41,0.893,48,0.34,49,0.101,70,0.017,71,0.017,72,1.838,74,1.816,75,2.2,81,2.903,84,4.283,85,2.672,86,2.072,87,1.937,89,2.868,90,3.091,144,1.605,166,2.599,169,2.599,171,2.599,172,2.599,173,2.072,702,4.058,714,3.831,715,3.555,724,3.555,725,3.555,726,4.174,727,4.174,728,4.174]],["title/injectables/UserService.html",[98,1.021,714,2.045]],["body/injectables/UserService.html",[3,0.179,4,0.144,5,0.111,7,0.318,8,1.161,13,0.023,19,0.933,24,1.812,29,1.259,32,1.544,33,1.351,34,0.781,35,1.298,39,1.636,40,0.601,41,0.469,48,0.179,49,0.053,50,2.595,59,0.954,60,0.896,64,2.33,68,1.603,70,0.011,71,0.011,98,0.975,99,1.017,102,1.373,119,2.316,123,2.918,125,1.603,126,1.088,181,3.351,182,1.259,183,1.259,184,1.919,187,1.688,190,2.564,191,1.259,194,1.812,195,1.953,201,2.707,202,1.653,203,2.595,204,1.934,215,2.179,221,1.161,253,1.095,256,1.835,266,1.493,268,2.316,296,1.953,331,2.918,390,2.896,393,2.837,409,2.118,411,2.118,424,2.068,425,1.688,434,1.088,439,1.088,463,1.259,464,1.259,465,1.493,467,2.316,478,2.896,484,5.357,485,1.493,533,1.578,544,1.259,552,1.259,579,1.493,583,2.837,585,1.653,587,1.653,588,1.653,589,1.653,590,1.653,595,1.653,597,1.653,598,3.141,600,1.653,601,1.653,603,1.653,605,1.653,607,1.653,608,2.564,609,1.653,610,1.653,611,1.365,612,1.653,613,1.653,614,1.653,615,1.653,617,2.564,618,1.653,620,3.141,621,1.653,690,2.595,692,2.564,704,1.867,714,1.953,729,1.867,730,4.166,731,2.192,732,2.192,733,2.192,734,2.192,735,2.192,736,2.192,737,2.192,738,1.867,739,1.867,740,2.192,741,2.192,742,2.192,743,2.192,744,3.4,745,2.192,746,2.192,747,3.4,748,3.4,749,3.4,750,3.4,751,3.4,752,3.4,753,2.192,754,2.192,755,2.192,756,2.192,757,3.4,758,2.192,759,3.4,760,3.4,761,2.192,762,2.192,763,2.192,764,2.192,765,2.192]],["title/changelog.html",[766,2.03,767,2.03,768,2.539]],["body/changelog.html",[4,0.239,5,0.262,13,0.014,30,1.528,70,0.009,71,0.009,87,0.833,204,1.346,243,1.346,253,0.578,412,2.275,532,1.976,533,1.346,611,1.117,768,5.312,769,2.901,770,3.924,771,3.164,772,1.794,773,3.111,774,2.901,775,3.652,776,1.794,777,1.794,778,2.471,779,4.196,780,1.528,781,1.794,782,3.652,783,5.73,784,1.794,785,1.528,786,1.794,787,3.164,788,1.794,789,4.196,790,1.794,791,1.794,792,1.794,793,1.794,794,6.072,795,1.794,796,3.111,797,1.794,798,1.794,799,2.901,800,1.794,801,1.794,802,3.111,803,2.901,804,2.901,805,3.652,806,2.901,807,1.794,808,2.901,809,6.681,810,1.794,811,1.794,812,1.794,813,1.794,814,2.901,815,1.794,816,2.901,817,1.794,818,2.901,819,1.794,820,2.901,821,1.794,822,1.794,823,1.794,824,1.794,825,1.794,826,1.794,827,1.794,828,2.901,829,2.901,830,1.794,831,1.794,832,1.794,833,1.794,834,1.794,835,1.794,836,1.794,837,1.794,838,1.794,839,1.794,840,1.794,841,1.794,842,4.929,843,3.111,844,1.528,845,1.794,846,3.924,847,5.401,848,1.794,849,2.901,850,1.794,851,1.794,852,1.794,853,2.901,854,1.794,855,1.794,856,1.794,857,1.794,858,3.652,859,2.901,860,2.901,861,2.901,862,1.794,863,1.794,864,1.794,865,1.794,866,1.794,867,3.652,868,3.652,869,2.901,870,1.528,871,2.901,872,2.901,873,1.528,874,1.794,875,2.901,876,1.528,877,1.794,878,2.901,879,4.6,880,4.929,881,1.794,882,2.901,883,1.794,884,2.471,885,1.794,886,4.607,887,3.652,888,1.528,889,1.794,890,1.794,891,1.794,892,1.794,893,2.901,894,1.794,895,1.794,896,3.111,897,1.794,898,1.794,899,2.754,900,1.794,901,1.528,902,1.794,903,1.794,904,1.794,905,1.794,906,1.794,907,1.794,908,1.794,909,1.528,910,1.794,911,1.794,912,2.901,913,1.794,914,1.794,915,1.794,916,4.196,917,1.794,918,1.794,919,1.528,920,1.794,921,1.794,922,1.794,923,1.794,924,1.794,925,1.794,926,1.794,927,2.901,928,1.794,929,1.794,930,2.901,931,1.794,932,1.794,933,1.794,934,1.794,935,1.794,936,1.528,937,1.794,938,2.901,939,1.794,940,1.794,941,1.794,942,1.794,943,1.794,944,4.929,945,1.794,946,2.901,947,1.794,948,3.652,949,3.652,950,1.794,951,2.901,952,1.794,953,1.794,954,1.794,955,1.528,956,1.794,957,1.794,958,1.794,959,1.794,960,2.901,961,1.794,962,2.901,963,1.528,964,1.794,965,1.794,966,1.794,967,1.794,968,1.794,969,1.794,970,1.794,971,1.794,972,2.901,973,1.794,974,2.901,975,1.794,976,1.794,977,1.794,978,1.794,979,1.794,980,1.794,981,1.794,982,1.794,983,1.794,984,1.794,985,1.794,986,1.794,987,1.794,988,1.794,989,1.794,990,1.794,991,1.794,992,1.528,993,1.794,994,1.794,995,1.794,996,1.794,997,1.794,998,1.794,999,1.794,1000,1.794,1001,1.528,1002,1.794,1003,1.794,1004,1.794,1005,1.794,1006,1.794,1007,1.794,1008,1.794,1009,1.528,1010,2.471,1011,1.794,1012,1.794,1013,1.794,1014,1.794,1015,1.794,1016,1.794]],["title/contributing.html",[766,2.03,767,2.03,1017,2.539]],["body/contributing.html",[5,0.11,11,3.522,13,0.01,19,0.361,24,1.157,32,0.66,50,2.103,70,0.01,71,0.01,75,0.888,131,1.247,204,1.567,490,3.528,532,1.479,533,1.008,770,1.85,771,4.796,778,1.85,785,2.876,787,3.123,796,1.85,844,2.876,846,2.876,870,2.876,873,2.876,876,2.876,884,1.85,899,1.638,901,1.85,909,1.85,919,2.876,936,1.85,955,1.85,1009,1.85,1010,3.979,1017,2.876,1018,2.876,1019,3.528,1020,1.85,1021,2.172,1022,2.172,1023,3.376,1024,2.172,1025,3.376,1026,2.172,1027,2.172,1028,3.376,1029,5.591,1030,5.591,1031,3.376,1032,2.172,1033,4.142,1034,2.172,1035,2.172,1036,2.172,1037,3.376,1038,2.172,1039,2.172,1040,2.172,1041,3.376,1042,3.376,1043,2.172,1044,2.172,1045,4.142,1046,1.638,1047,2.172,1048,2.172,1049,2.172,1050,2.172,1051,2.172,1052,2.172,1053,2.172,1054,2.172,1055,2.172,1056,2.172,1057,2.172,1058,2.172,1059,2.172,1060,2.172,1061,3.376,1062,2.172,1063,2.172,1064,3.376,1065,2.172,1066,2.172,1067,3.376,1068,2.172,1069,5.06,1070,2.172,1071,5.06,1072,3.376,1073,2.172,1074,3.376,1075,2.172,1076,2.172,1077,2.172,1078,2.172,1079,2.172,1080,2.172,1081,2.172,1082,2.172,1083,2.172,1084,2.172,1085,3.376,1086,2.172,1087,2.172,1088,2.172,1089,3.376,1090,2.172,1091,3.376,1092,5.06,1093,2.172,1094,2.172,1095,2.172,1096,2.172,1097,3.376,1098,2.172,1099,2.172,1100,2.172,1101,2.172,1102,2.172,1103,2.172,1104,2.172,1105,2.172,1106,2.172,1107,2.172,1108,2.172,1109,2.172,1110,2.172,1111,2.172,1112,3.376,1113,4.142,1114,2.172,1115,2.172,1116,2.172,1117,2.172,1118,2.172,1119,2.172,1120,2.172,1121,2.172,1122,3.376,1123,2.172,1124,2.172,1125,3.376,1126,2.172,1127,2.172,1128,2.172,1129,2.172,1130,2.172,1131,2.172,1132,4.142,1133,2.172,1134,2.172,1135,2.172,1136,2.172,1137,3.376,1138,2.172,1139,2.172,1140,2.172,1141,2.172,1142,2.172,1143,2.172,1144,2.172,1145,2.172,1146,3.376,1147,2.172,1148,2.172,1149,2.172,1150,3.376,1151,3.376,1152,2.172,1153,2.172,1154,2.172,1155,2.172,1156,2.172,1157,2.172,1158,2.172,1159,2.172,1160,2.172,1161,2.172,1162,2.172,1163,2.172,1164,2.172,1165,3.376,1166,2.172,1167,2.172,1168,2.172,1169,2.172,1170,2.172,1171,2.172,1172,2.172,1173,2.172,1174,3.376,1175,2.172,1176,3.376,1177,3.376,1178,2.172,1179,2.172,1180,2.172,1181,2.172,1182,2.172,1183,2.172,1184,2.172,1185,2.172,1186,2.172,1187,2.172,1188,2.172,1189,2.172,1190,3.376,1191,2.172,1192,2.172,1193,2.172,1194,2.172,1195,2.172,1196,3.376,1197,2.172,1198,2.172,1199,2.172,1200,2.172,1201,2.172,1202,2.172,1203,2.172,1204,2.172,1205,2.172,1206,2.172,1207,2.172,1208,2.172,1209,2.172,1210,2.172,1211,2.172,1212,2.172,1213,2.172,1214,2.172,1215,2.172,1216,2.172,1217,2.172,1218,2.172,1219,2.172,1220,2.172,1221,2.172,1222,2.172,1223,2.172,1224,2.172,1225,2.172,1226,2.172,1227,2.172,1228,2.172,1229,2.172,1230,2.172]],["title/coverage.html",[1231,3.654]],["body/coverage.html",[0,2.064,1,1.732,5,0.128,6,2.166,13,0.022,34,0.369,42,1.461,49,0.161,70,0.012,71,0.012,98,1.742,100,2.166,109,1.732,110,2.166,116,1.584,125,1.3,137,1.461,140,1.584,146,1.732,163,1.584,180,2.166,184,1.04,187,1.263,204,1.181,217,1.584,219,2.872,220,2.166,222,1.584,224,1.732,254,2.187,274,3.11,294,1.461,295,2.166,320,1.461,321,2.166,322,2.872,331,1.461,332,2.166,333,2.872,372,2.166,395,2.166,400,2.166,401,2.166,408,2.166,410,2.267,415,1.891,422,1.732,423,2.166,437,1.461,441,1.918,456,2.166,463,1.461,464,1.461,509,2.166,522,2.166,530,1.732,531,2.166,545,1.584,550,1.461,576,2.166,623,2.166,630,1.732,631,2.166,642,1.584,646,1.461,668,2.166,685,2.166,688,2.166,690,1.584,691,2.166,694,2.166,702,1.732,703,2.166,714,1.461,729,2.166,963,3.244,1231,1.918,1232,2.544,1233,2.544,1234,2.544,1235,2.544,1236,2.544,1237,7.203,1238,3.809,1239,5.908,1240,2.166,1241,6.212,1242,6.64,1243,2.166,1244,2.166,1245,3.809,1246,4.566,1247,4.566,1248,3.244,1249,3.244,1250,2.166,1251,3.244,1252,3.244,1253,3.244,1254,3.244,1255,2.166,1256,3.244,1257,2.166,1258,4.566,1259,5.07,1260,2.166,1261,2.544]],["title/dependencies.html",[75,1.749,1262,2.539]],["body/dependencies.html",[13,0.023,38,4.711,41,0.931,46,1.249,49,0.135,70,0.017,71,0.017,75,1.78,144,1.674,168,3.283,173,2.162,190,3.283,247,3.709,252,2.32,383,5.177,462,3.283,780,3.709,1263,6.078,1264,4.355,1265,4.355,1266,4.355,1267,4.355,1268,4.355,1269,4.355,1270,4.355,1271,4.355,1272,4.355,1273,4.355,1274,4.355,1275,4.355,1276,4.355,1277,4.355,1278,4.355,1279,4.355,1280,4.355,1281,4.355,1282,4.355,1283,4.355,1284,4.355,1285,4.355,1286,4.355,1287,4.355,1288,4.355]],["title/miscellaneous/functions.html",[1289,2.03,1290,3.645]],["body/miscellaneous/functions.html",[7,0.733,13,0.021,32,1.534,33,1.216,34,0.733,35,1.289,39,1.626,70,0.019,71,0.019,235,4.299,463,3.48,464,2.899,1243,4.299,1244,5.53,1260,5.161,1289,3.438,1290,4.299,1291,5.048,1292,5.048,1293,5.048,1294,6.493]],["title/index.html",[7,0.433,766,2.03,767,2.03]],["body/index.html",[4,0.259,13,0.022,36,1.35,70,0.016,71,0.016,106,3.368,516,3.368,771,2.982,843,3.368,899,2.982,1018,3.368,1019,3.368,1231,2.982,1295,3.954,1296,3.954,1297,5.197,1298,3.954,1299,3.954,1300,3.954,1301,3.954,1302,3.954,1303,5.805,1304,3.954,1305,3.954,1306,3.954,1307,6.701,1308,3.954,1309,3.954,1310,6.574,1311,3.954,1312,5.197,1313,3.954,1314,3.954,1315,3.954,1316,3.954,1317,5.197,1318,5.197,1319,3.954,1320,3.954,1321,3.954,1322,5.197,1323,5.197,1324,3.954,1325,3.954,1326,3.954,1327,3.368,1328,3.954,1329,3.954,1330,3.954,1331,3.954,1332,3.954,1333,3.954,1334,3.954,1335,3.954,1336,3.954,1337,3.368,1338,3.954,1339,3.954,1340,3.368,1341,3.954,1342,3.954,1343,3.954,1344,3.368]],["title/modules.html",[74,2.108]],["body/modules.html",[13,0.018,70,0.018,71,0.018,73,3.3,74,2.108,79,3.017,80,3.017,81,2.108,82,3.017,83,3.017,84,3.017,1327,5.973,1345,7.013,1346,7.013,1347,7.013]],["title/overview.html",[1348,4.127]],["body/overview.html",[2,1.227,13,0.022,42,3.082,70,0.015,71,0.015,73,4.791,74,1.474,75,1.913,76,2.885,77,2.885,78,2.885,79,4.149,80,4.011,81,2.964,82,4.011,83,4.011,84,4.011,85,2.324,86,1.682,87,1.572,99,1.572,137,3.082,160,2.885,162,2.885,163,3.342,184,2.632,218,1.091,437,3.082,450,2.885,451,2.885,493,2.885,494,2.885,495,2.885,550,3.082,571,2.885,573,2.885,646,3.082,663,2.885,664,2.885,714,3.082,724,2.885,725,2.885,1348,2.885,1349,3.387,1350,3.387,1351,3.387,1352,3.387]],["title/properties.html",[221,1.461,1262,2.539]],["body/properties.html",[13,0.022,36,1.839,70,0.02,71,0.02,221,1.839,787,4.062,992,4.588,1337,4.588,1344,4.588,1353,5.386]],["title/todo.html",[766,2.03,767,2.03,1354,2.539]],["body/todo.html",[5,0.243,13,0.02,36,1.641,70,0.018,71,0.018,243,2.73,253,1.548,611,2.993,773,4.094,802,4.094,879,4.094,888,4.094,1001,4.094,1020,4.094,1340,4.094,1354,4.094,1355,6.356,1356,4.806,1357,4.806,1358,4.806,1359,4.806,1360,5.882,1361,4.806,1362,4.806,1363,4.806,1364,4.806,1365,4.806,1366,4.806,1367,4.806,1368,4.806,1369,4.806,1370,4.806,1371,4.806,1372,4.806,1373,4.806,1374,4.806]],["title/miscellaneous/variables.html",[1046,3.227,1289,2.03]],["body/miscellaneous/variables.html",[7,0.357,11,1.855,13,0.023,24,2.384,28,2.794,29,1.413,33,1.289,34,0.65,36,1.528,64,2.657,68,0.84,70,0.012,71,0.012,125,1.702,146,2.53,181,2.384,187,2.657,194,1.979,195,2.133,201,2.656,204,1.142,214,1.855,215,1.142,222,2.314,237,2.475,244,1.676,253,1.441,296,2.863,297,3.375,299,3.812,301,3.812,307,3.812,310,4.246,319,2.096,338,1.855,353,2.096,354,2.096,358,1.855,410,1.844,415,1.844,441,1.855,510,4.246,533,2.077,738,5.243,739,5.243,896,2.096,1046,1.855,1240,3.164,1248,2.096,1249,3.812,1250,3.164,1251,2.096,1252,3.812,1253,2.096,1254,3.812,1255,3.164,1256,2.096,1257,3.164,1289,1.676,1375,2.46,1376,3.715,1377,3.715,1378,3.715,1379,3.715,1380,2.46,1381,2.46,1382,2.46,1383,2.46,1384,2.46,1385,2.46,1386,2.46,1387,5.627,1388,2.46,1389,2.46,1390,2.46,1391,2.46,1392,4.475,1393,5.627,1394,4.475,1395,4.475,1396,4.475,1397,4.986,1398,4.475,1399,2.46,1400,2.46,1401,2.46,1402,2.46,1403,2.46,1404,2.46,1405,2.46,1406,2.46,1407,2.46,1408,2.46,1409,2.46,1410,2.46,1411,2.46]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1237,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":992,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.0.2",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":888,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["05",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":244,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":780,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.0.1",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":1227,"title":{},"body":{"contributing.html":{}}}],["1/2",{"_index":1236,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":896,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["12.34",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1352,"title":{},"body":{"overview.html":{}}}],["16",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["1c51e725",{"_index":284,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["1d",{"_index":1366,"title":{},"body":{"todo.html":{}}}],["2",{"_index":319,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":611,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{}}}],["2014",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["2015",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":1364,"title":{},"body":{"todo.html":{}}}],["2063",{"_index":285,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["24h",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@apiproperty({description",{"_index":312,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["30.99",{"_index":314,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["31",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["345",{"_index":1373,"title":{},"body":{"todo.html":{}}}],["3d",{"_index":1361,"title":{},"body":{"todo.html":{}}}],["4.0.0",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["4714",{"_index":286,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["4e5e",{"_index":260,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["5.0.1",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1235,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1350,"title":{},"body":{"overview.html":{}}}],["7",{"_index":1349,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["73dffe89",{"_index":258,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["8",{"_index":1351,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["80e9",{"_index":287,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["8601",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["9ad9fef2f5a8",{"_index":288,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["9c6a267163ca",{"_index":262,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["_",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_count",{"_index":487,"title":{},"body":{"injectables/OrderService.html":{}}}],["a5bc",{"_index":259,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["a939",{"_index":261,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["abcd@1234",{"_index":338,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["abusive",{"_index":1191,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1143,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1104,"title":{},"body":{"contributing.html":{}}}],["account",{"_index":1182,"title":{},"body":{"contributing.html":{}}}],["aciek",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["acionar",{"_index":507,"title":{},"body":{"modules/PrismaModule.html":{}}}],["acting",{"_index":1183,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":1149,"title":{},"body":{"contributing.html":{}}}],["adapted",{"_index":1225,"title":{},"body":{"contributing.html":{}}}],["added",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["address",{"_index":1132,"title":{},"body":{"contributing.html":{}}}],["adheres",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["advances",{"_index":1119,"title":{},"body":{"contributing.html":{}}}],["against",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":1077,"title":{},"body":{"contributing.html":{}}}],["aishek",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["aligned",{"_index":1161,"title":{},"body":{"contributing.html":{}}}],["amazing",{"_index":1328,"title":{},"body":{"index.html":{}}}],["amielucha",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["answer",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["answers",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["antes",{"_index":603,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["apenas",{"_index":351,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["api",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["apioperation({summary:'criar",{"_index":657,"title":{},"body":{"controllers/TableController.html":{}}}],["apioperation({summary:'listar",{"_index":652,"title":{},"body":{"controllers/TableController.html":{}}}],["apioperation({summary:'vizualizar",{"_index":654,"title":{},"body":{"controllers/TableController.html":{}}}],["apiproperty",{"_index":246,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('order",{"_index":442,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":553,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('table",{"_index":650,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('user",{"_index":716,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":516,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":521,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appearance",{"_index":1086,"title":{},"body":{"contributing.html":{}}}],["applications",{"_index":1302,"title":{},"body":{"index.html":{}}}],["applies",{"_index":1172,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":73,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointed",{"_index":1184,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1146,"title":{},"body":{"contributing.html":{}}}],["appservice",{"_index":42,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argument",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["art4",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["asked",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["assim",{"_index":615,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["assume",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["atributo",{"_index":594,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{}}}],["atributos",{"_index":589,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["attacks",{"_index":1124,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1118,"title":{},"body":{"contributing.html":{}}}],["attribution",{"_index":1224,"title":{},"body":{"contributing.html":{}}}],["atualizar",{"_index":547,"title":{},"body":{"controllers/ProductController.html":{}}}],["atualizar/editar",{"_index":643,"title":{},"body":{"controllers/TableController.html":{}}}],["autenticado",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{}}}],["auth.controller",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":109,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":79,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1337,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authors",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["authservice",{"_index":137,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1228,"title":{},"body":{"contributing.html":{}}}],["await",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["azkidenz",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["backers",{"_index":1329,"title":{},"body":{"index.html":{}}}],["background",{"_index":346,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["badrequestexception",{"_index":741,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":748,"title":{},"body":{"injectables/UserService.html":{}}}],["ban",{"_index":1162,"title":{},"body":{"contributing.html":{}}}],["based",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["baseurl",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["basic",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["bcrypt",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password,10",{"_index":754,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(data.password,10",{"_index":763,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bd",{"_index":508,"title":{},"body":{"modules/PrismaModule.html":{}}}],["before",{"_index":1028,"title":{},"body":{"contributing.html":{}}}],["behavior",{"_index":1092,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1166,"title":{},"body":{"contributing.html":{}}}],["being",{"_index":1098,"title":{},"body":{"contributing.html":{}}}],["benefit",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["best",{"_index":1108,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"contributing.html":{}}}],["bootstrap",{"_index":1244,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["borda",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":901,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["br",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["brazilian",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["brits",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1347,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1345,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":1367,"title":{},"body":{"todo.html":{}}}],["build",{"_index":1037,"title":{},"body":{"contributing.html":{}}}],["building",{"_index":1298,"title":{},"body":{"index.html":{}}}],["calabresa",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["can’t",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["care",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["catch(handleerror",{"_index":485,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["catupiry",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cebola",{"_index":281,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["chamado",{"_index":501,"title":{},"body":{"modules/PrismaModule.html":{}}}],["chamar",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["change",{"_index":846,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":768,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelogs",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":770,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["checa",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["chinese",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["chronological",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":1204,"title":{},"body":{"contributing.html":{}}}],["clarified",{"_index":936,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["clarify",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["clarifying",{"_index":1142,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":49,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classe",{"_index":587,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["classes",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["closed",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":450,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":452,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":451,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":493,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":494,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":495,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":571,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":572,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":573,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":663,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":665,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":664,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":724,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":726,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":725,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cname",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":1029,"title":{},"body":{"contributing.html":{}}}],["codigo",{"_index":505,"title":{},"body":{"modules/PrismaModule.html":{}}}],["com",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["comments",{"_index":1122,"title":{},"body":{"contributing.html":{}}}],["commit",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["commits",{"_index":1156,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["community",{"_index":1071,"title":{},"body":{"contributing.html":{}}}],["como",{"_index":607,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["comparison",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["complaints",{"_index":1198,"title":{},"body":{"contributing.html":{}}}],["conduct",{"_index":1030,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1207,"title":{},"body":{"contributing.html":{}}}],["confirmação",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":469,"title":{},"body":{"injectables/OrderService.html":{}}}],["considered",{"_index":1136,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructive",{"_index":1105,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["contacting",{"_index":1195,"title":{},"body":{"contributing.html":{}}}],["contained",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["container",{"_index":1051,"title":{},"body":{"contributing.html":{}}}],["contains",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":1358,"title":{},"body":{"todo.html":{}}}],["contributes",{"_index":1093,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1017,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1160,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1165,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1068,"title":{},"body":{"contributing.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":443,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":554,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('table",{"_index":651,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('user",{"_index":717,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["corrective",{"_index":1148,"title":{},"body":{"contributing.html":{}}}],["correta",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["counter",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["covenant",{"_index":1226,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1230,"title":{},"body":{"contributing.html":{}}}],["coverage",{"_index":1231,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":253,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":556,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":444,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createproductdto",{"_index":534,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["create(createproductdto:createproductdto):promise",{"_index":602,"title":{},"body":{"injectables/ProductService.html":{}}}],["create(createtabledto",{"_index":632,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["create(createtabledto:createtabledto):promise",{"_index":679,"title":{},"body":{"injectables/TableService.html":{}}}],["create(createuserdto",{"_index":704,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(createuserdto:createuserdto):promise",{"_index":745,"title":{},"body":{"injectables/UserService.html":{}}}],["create(user",{"_index":426,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(userid",{"_index":458,"title":{},"body":{"injectables/OrderService.html":{}}}],["create(userid:string",{"_index":466,"title":{},"body":{"injectables/OrderService.html":{}}}],["createdat",{"_index":409,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":472,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":217,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderproductdto",{"_index":224,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createorderproductdto.description",{"_index":476,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.productid",{"_index":474,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.quantity",{"_index":475,"title":{},"body":{"injectables/OrderService.html":{}}}],["createparamdecorator",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":294,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createtabledto",{"_index":320,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["createtabledto:createtabledto",{"_index":658,"title":{},"body":{"controllers/TableController.html":{}}}],["createuserdto",{"_index":331,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.confirmpassword",{"_index":747,"title":{},"body":{"injectables/UserService.html":{}}}],["creating",{"_index":1094,"title":{},"body":{"contributing.html":{}}}],["criando",{"_index":257,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["criar",{"_index":428,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["criticism",{"_index":1106,"title":{},"body":{"contributing.html":{}}}],["croatian",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["cry",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["custom",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["czech",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{}}}],["dados",{"_index":406,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":467,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data,//antes",{"_index":605,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":762,"title":{},"body":{"injectables/UserService.html":{}}}],["data:createorderdto.products.map((createorderproductdto",{"_index":473,"title":{},"body":{"injectables/OrderService.html":{}}}],["data:partial",{"_index":618,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data:product",{"_index":606,"title":{},"body":{"injectables/ProductService.html":{}}}],["data:table",{"_index":681,"title":{},"body":{"injectables/TableService.html":{}}}],["data:user",{"_index":756,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":412,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"changelog.html":{}}}],["dates",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["deem",{"_index":1167,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1202,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":738,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"contributing.html":{}}}],["deleta",{"_index":634,"title":{},"body":{"controllers/TableController.html":{}}}],["deletar",{"_index":542,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":566,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":541,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":661,"title":{},"body":{"controllers/TableController.html":{}}}],["delete(id",{"_index":579,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["delete(id:string",{"_index":621,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":75,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecations",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["description:true",{"_index":483,"title":{},"body":{"injectables/OrderService.html":{}}}],["descrição",{"_index":298,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["details",{"_index":1042,"title":{},"body":{"contributing.html":{}}}],["determined",{"_index":1221,"title":{},"body":{"contributing.html":{}}}],["deve",{"_index":325,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{}}}],["developers",{"_index":1060,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1309,"title":{},"body":{"index.html":{}}}],["diff",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["differentiate",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["differing",{"_index":1100,"title":{},"body":{"contributing.html":{}}}],["diffs",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["disability",{"_index":1079,"title":{},"body":{"contributing.html":{}}}],["discuss",{"_index":1021,"title":{},"body":{"contributing.html":{}}}],["docs",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["documented",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":1040,"title":{},"body":{"contributing.html":{}}}],["domain",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["done",{"_index":1374,"title":{},"body":{"todo.html":{}}}],["dos",{"_index":230,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["dto",{"_index":583,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":760,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/create",{"_index":439,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":552,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["e/ou",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":1319,"title":{},"body":{"index.html":{}}}],["each:true",{"_index":271,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["edit",{"_index":1154,"title":{},"body":{"contributing.html":{}}}],["editar",{"_index":712,"title":{},"body":{"controllers/UserController.html":{}}}],["edits",{"_index":1158,"title":{},"body":{"contributing.html":{}}}],["efficient",{"_index":1299,"title":{},"body":{"index.html":{}}}],["electronic",{"_index":1131,"title":{},"body":{"contributing.html":{}}}],["em",{"_index":502,"title":{},"body":{"modules/PrismaModule.html":{}}}],["email",{"_index":1025,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":1110,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["enableshutdownhooks",{"_index":511,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":513,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":601,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["encourage",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":1038,"title":{},"body":{"contributing.html":{}}}],["enforce",{"_index":1215,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1190,"title":{},"body":{"contributing.html":{}}}],["english",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["ensure",{"_index":1035,"title":{},"body":{"contributing.html":{}}}],["entities/product.entity",{"_index":586,"title":{},"body":{"injectables/ProductService.html":{}}}],["entities/table.entities",{"_index":649,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["entities/user.entity",{"_index":742,"title":{},"body":{"injectables/UserService.html":{}}}],["environment",{"_index":1045,"title":{},"body":{"contributing.html":{}}}],["equally",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["error",{"_index":1294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":465,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["est",{"_index":241,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{}}}],["esta",{"_index":608,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["estão",{"_index":233,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ethnicity",{"_index":1080,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":1188,"title":{},"body":{"contributing.html":{}}}],["everyone",{"_index":1075,"title":{},"body":{"contributing.html":{}}}],["evolving",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["example",{"_index":243,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"changelog.html":{},"todo.html":{}}}],["examples",{"_index":1010,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["exclusionary",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["executioncontext",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exibição",{"_index":352,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["existe",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["expected",{"_index":1144,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1074,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1102,"title":{},"body":{"contributing.html":{}}}],["expiresin",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["explanation",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":1134,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":497,"title":{},"body":{"modules/PrismaModule.html":{}}}],["exposed",{"_index":1047,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["expression",{"_index":1082,"title":{},"body":{"contributing.html":{}}}],["extends",{"_index":384,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":381,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["face",{"_index":1217,"title":{},"body":{"contributing.html":{}}}],["fair",{"_index":1147,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1216,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["feat",{"_index":1362,"title":{},"body":{"todo.html":{}}}],["fermentacao",{"_index":303,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["fica",{"_index":613,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"todo.html":{}}}],["files",{"_index":1054,"title":{},"body":{"contributing.html":{}}}],["fina",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":424,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall():promise",{"_index":595,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":425,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":448,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":434,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(id:string",{"_index":597,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["fino",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1020,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["fix",{"_index":879,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixed",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["flat",{"_index":343,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["focusing",{"_index":1107,"title":{},"body":{"contributing.html":{}}}],["follow",{"_index":1031,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["footnote",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":773,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["formatting",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["fostering",{"_index":1066,"title":{},"body":{"contributing.html":{}}}],["fraca",{"_index":371,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":365,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":1297,"title":{},"body":{"index.html":{}}}],["frango",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":1073,"title":{},"body":{"contributing.html":{}}}],["french",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["frequently",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["fresca",{"_index":302,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["fun",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["funcao",{"_index":270,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["function",{"_index":963,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["functions",{"_index":1290,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":870,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gather",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["gender",{"_index":1081,"title":{},"body":{"contributing.html":{}}}],["gerado",{"_index":402,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["german",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["get(':id",{"_index":447,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":435,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(baseurl:string",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":766,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["git",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":1001,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["good",{"_index":1009,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1103,"title":{},"body":{"contributing.html":{}}}],["grow",{"_index":1324,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["guiding",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["h4vry",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["hameds",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["handleerror",{"_index":463,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":1293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["harassing",{"_index":1192,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1072,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1170,"title":{},"body":{"contributing.html":{}}}],["headings",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["help",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1334,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":1365,"title":{},"body":{"todo.html":{}}}],["hopefully",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["http://contributor",{"_index":1229,"title":{},"body":{"contributing.html":{}}}],["httpcode",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":567,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://avatars.githubusercontent.com/u/7906171",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://i.imgur.com/hne75iw.png",{"_index":307,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["https://media.istockphoto.com/vectors/user",{"_index":341,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["https://nestjs.com",{"_index":1341,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["icon",{"_index":342,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["id",{"_index":256,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@useguards(undefined)@apibearerauth",{"_index":708,"title":{},"body":{"controllers/UserController.html":{}}}],["id1300845620?k=20&m=1300845620&s=612x612&w=0&h=f4xtzdav7npuzbg0habspu0sngecm0x7nbkztuta3n8",{"_index":349,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["id:string",{"_index":655,"title":{},"body":{"controllers/TableController.html":{}}}],["id:true",{"_index":479,"title":{},"body":{"injectables/OrderService.html":{}}}],["id:userid",{"_index":470,"title":{},"body":{"injectables/OrderService.html":{}}}],["id?:string",{"_index":628,"title":{},"body":{"classes/Table.html":{}}}],["ideal",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["identifier",{"_index":1233,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":785,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["ids",{"_index":229,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["if(createuserdto.password",{"_index":746,"title":{},"body":{"injectables/UserService.html":{}}}],["if(data.password",{"_index":761,"title":{},"body":{"injectables/UserService.html":{}}}],["if(dto.password",{"_index":759,"title":{},"body":{"injectables/UserService.html":{}}}],["ignoreexpiration",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["iguais",{"_index":752,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["image",{"_index":296,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["image:true",{"_index":492,"title":{},"body":{"injectables/OrderService.html":{}}}],["imagem",{"_index":306,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["imagery",{"_index":1116,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":518,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["imports:[prismamodule",{"_index":455,"title":{},"body":{"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{}}}],["improve",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["inappropriate",{"_index":1137,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1210,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":490,"title":{},"body":{"injectables/OrderService.html":{},"contributing.html":{}}}],["includes",{"_index":1044,"title":{},"body":{"contributing.html":{}}}],["including",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["inclusive",{"_index":1096,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1052,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1175,"title":{},"body":{"contributing.html":{}}}],["inestapplication",{"_index":514,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informada",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["informadas",{"_index":750,"title":{},"body":{"injectables/UserService.html":{}}}],["information",{"_index":1128,"title":{},"body":{"contributing.html":{}}}],["injectable",{"_index":98,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":99,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["insert",{"_index":1197,"title":{},"body":{"contributing.html":{}}}],["install",{"_index":1036,"title":{},"body":{"contributing.html":{}}}],["installation",{"_index":1306,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1308,"title":{},"body":{"index.html":{}}}],["instances",{"_index":1151,"title":{},"body":{"contributing.html":{}}}],["instead",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["insulting/derogatory",{"_index":1121,"title":{},"body":{"contributing.html":{}}}],["intentionally",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1032,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1065,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":1043,"title":{},"body":{"contributing.html":{}}}],["investigated",{"_index":1200,"title":{},"body":{"contributing.html":{}}}],["inválidos",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishashvalid",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":248,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isint()@ispositive()@apiproperty({description",{"_index":238,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnotempty",{"_index":399,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":316,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber()@ispositive({message",{"_index":323,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":311,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["iso",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["isolated",{"_index":344,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ispositive",{"_index":249,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{}}}],["ispositive({message:'numero",{"_index":329,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["isstring",{"_index":293,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":277,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":396,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":360,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["issue",{"_index":1024,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1159,"title":{},"body":{"contributing.html":{}}}],["isurl",{"_index":317,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":305,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":250,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":283,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["it's",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["italian",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["itens",{"_index":291,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["ja",{"_index":268,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["jane",{"_index":1368,"title":{},"body":{"todo.html":{}}}],["jira",{"_index":1372,"title":{},"body":{"todo.html":{}}}],["jkostolansky",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["john",{"_index":1363,"title":{},"body":{"todo.html":{}}}],["join",{"_index":1331,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":387,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtservice:jwtservice",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":163,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1338,"title":{},"body":{"index.html":{}}}],["karalamalar",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["keep",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["keeping",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["korean",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["language",{"_index":1097,"title":{},"body":{"contributing.html":{}}}],["latest",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["layer",{"_index":1039,"title":{},"body":{"contributing.html":{}}}],["leadership",{"_index":1223,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["leitura",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["level",{"_index":1083,"title":{},"body":{"contributing.html":{}}}],["license",{"_index":1344,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1323,"title":{},"body":{"index.html":{}}}],["linha",{"_index":610,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["link",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["lista",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["listar",{"_index":430,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["listar/visualizar",{"_index":537,"title":{},"body":{"controllers/ProductController.html":{}}}],["literal",{"_index":376,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["locations",{"_index":1050,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["logged",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["login",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":116,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto:logindto):promise",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginresponsedto",{"_index":140,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["logs",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["lugar",{"_index":504,"title":{},"body":{"modules/PrismaModule.html":{}}}],["m",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["magol",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["mail",{"_index":1178,"title":{},"body":{"contributing.html":{}}}],["maintain",{"_index":1206,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1069,"title":{},"body":{"contributing.html":{}}}],["mais",{"_index":266,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["make",{"_index":796,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["makes",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":919,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["markdown",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["massa",{"_index":301,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["matches",{"_index":367,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":370,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":318,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["media",{"_index":1181,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1112,"title":{},"body":{"contributing.html":{}}}],["mentioning",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["mentions",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["merge",{"_index":873,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["mesa",{"_index":240,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"controllers/TableController.html":{}}}],["mesas",{"_index":638,"title":{},"body":{"controllers/TableController.html":{}}}],["message",{"_index":363,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1026,"title":{},"body":{"contributing.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["metodos",{"_index":590,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":368,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":369,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":1289,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1322,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1312,"title":{},"body":{"index.html":{}}}],["module",{"_index":72,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":74,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@useguards(undefined)@apibearerauth",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":1333,"title":{},"body":{"index.html":{}}}],["mpbzh",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["muito",{"_index":364,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mussarela",{"_index":310,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":1339,"title":{},"body":{"index.html":{}}}],["na",{"_index":609,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["name",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name:true",{"_index":481,"title":{},"body":{"injectables/OrderService.html":{}}}],["nationality",{"_index":1084,"title":{},"body":{"contributing.html":{}}}],["natural",{"_index":304,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["navigation",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":1203,"title":{},"body":{"contributing.html":{}}}],["needs",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["nest",{"_index":1303,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1343,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nickname",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nico",{"_index":357,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ninguem",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["node.js",{"_index":1296,"title":{},"body":{"index.html":{}}}],["noise",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["nome",{"_index":309,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["notable",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":955,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["notfoundexception",{"_index":585,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`registro",{"_index":600,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["now",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1307,"title":{},"body":{"index.html":{}}}],["number",{"_index":237,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{},"miscellaneous/variables.html":{}}}],["number:createorderdto.tablenumber",{"_index":471,"title":{},"body":{"injectables/OrderService.html":{}}}],["number:number",{"_index":629,"title":{},"body":{"classes/Table.html":{}}}],["number:true",{"_index":480,"title":{},"body":{"injectables/OrderService.html":{}}}],["numbers",{"_index":1053,"title":{},"body":{"contributing.html":{}}}],["numero",{"_index":324,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["não",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["número",{"_index":239,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["o",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"modules/PrismaModule.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["obj",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.name",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.nickname",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.number",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":737,"title":{},"body":{"injectables/UserService.html":{}}}],["object.entries(seed",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(products",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(tables",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objeto",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["obligated",{"_index":1205,"title":{},"body":{"contributing.html":{}}}],["observações",{"_index":278,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["obvious",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["occupy",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["offensive",{"_index":1169,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1177,"title":{},"body":{"contributing.html":{}}}],["offline",{"_index":1187,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":1057,"title":{},"body":{"contributing.html":{}}}],["online",{"_index":1186,"title":{},"body":{"contributing.html":{}}}],["onmoduleinit",{"_index":512,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":899,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["optional",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":254,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["order.controller",{"_index":454,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":440,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:22",{"_index":245,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:32",{"_index":236,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":438,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":422,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordering",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["ordermodule",{"_index":80,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":437,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["orientation",{"_index":1090,"title":{},"body":{"contributing.html":{}}}],["os",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["osadchyi",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["others",{"_index":1127,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1193,"title":{},"body":{"contributing.html":{}}}],["ou",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{}}}],["outdated",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["outros",{"_index":503,"title":{},"body":{"modules/PrismaModule.html":{}}}],["over",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1348,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1027,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1262,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["para",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{}}}],["param",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":686,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":687,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":689,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":693,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["participants",{"_index":1114,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1070,"title":{},"body":{"contributing.html":{}}}],["passport",{"_index":383,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":380,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":385,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["password:await",{"_index":753,"title":{},"body":{"injectables/UserService.html":{}}}],["patch",{"_index":549,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":562,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":546,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["paulo",{"_index":353,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["paulosalvatore",{"_index":358,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.nickname",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pedido",{"_index":234,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"controllers/OrderController.html":{}}}],["pedidos",{"_index":432,"title":{},"body":{"controllers/OrderController.html":{}}}],["pelo",{"_index":403,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["people",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["perfil",{"_index":340,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["permanent",{"_index":1219,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1164,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1061,"title":{},"body":{"contributing.html":{}}}],["permitir",{"_index":500,"title":{},"body":{"modules/PrismaModule.html":{}}}],["persian",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["personal",{"_index":1085,"title":{},"body":{"contributing.html":{}}}],["phrasing",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["physical",{"_index":1130,"title":{},"body":{"contributing.html":{}}}],["pierceh89",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["pizza",{"_index":299,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":1019,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pledge",{"_index":1064,"title":{},"body":{"contributing.html":{}}}],["podcast",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["poder",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["pois",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{}}}],["policies",{"_index":1212,"title":{},"body":{"contributing.html":{}}}],["polish",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["political",{"_index":1123,"title":{},"body":{"contributing.html":{}}}],["ports",{"_index":1048,"title":{},"body":{"contributing.html":{}}}],["portugese",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["portuguese",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["porx",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["positive",{"_index":1095,"title":{},"body":{"contributing.html":{}}}],["positivo",{"_index":330,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["positivo'})@apiproperty({description",{"_index":327,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["post",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":427,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["posted",{"_index":1213,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1179,"title":{},"body":{"contributing.html":{}}}],["pra",{"_index":506,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prefix",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["presunto",{"_index":300,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["previous",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["preço",{"_index":313,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["price",{"_index":297,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["price:true",{"_index":491,"title":{},"body":{"injectables/OrderService.html":{}}}],["principles",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.ordercreateinput",{"_index":468,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.product.upsert",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.productcreateinput",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":498,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.table.upsert",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.tablecreateinput",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.user.upsert",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":462,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma:prismaservice",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaclient",{"_index":510,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":81,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":184,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["prismaservice],//vai",{"_index":499,"title":{},"body":{"modules/PrismaModule.html":{}}}],["private",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{},"contributing.html":{}}}],["process",{"_index":1034,"title":{},"body":{"contributing.html":{}}}],["process.env.jwt_secret",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["procura",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["product",{"_index":415,"title":{"classes/Product.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.controller",{"_index":575,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":255,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":274,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":289,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":292,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:25",{"_index":282,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:27",{"_index":315,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:34",{"_index":308,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.entities",{"_index":593,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.service",{"_index":551,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.ts",{"_index":1252,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["product/product.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":530,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":275,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["production",{"_index":1314,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":82,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["products:product[]=[];//esta",{"_index":591,"title":{},"body":{"injectables/ProductService.html":{}}}],["products:true",{"_index":488,"title":{},"body":{"injectables/OrderService.html":{}}}],["productservice",{"_index":550,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":279,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produtos",{"_index":231,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["professional",{"_index":1138,"title":{},"body":{"contributing.html":{}}}],["profile",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["progress",{"_index":1370,"title":{},"body":{"todo.html":{}}}],["progressive",{"_index":1295,"title":{},"body":{"index.html":{}}}],["project",{"_index":771,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["project's",{"_index":1222,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":221,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["pt",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1125,"title":{},"body":{"contributing.html":{}}}],["publishing",{"_index":1126,"title":{},"body":{"contributing.html":{}}}],["pull",{"_index":1033,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":645,"title":{},"body":{"controllers/TableController.html":{}}}],["quantidade",{"_index":290,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["quantity",{"_index":276,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["quantity:true",{"_index":482,"title":{},"body":{"injectables/OrderService.html":{}}}],["que",{"_index":232,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["queijo",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["questions",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["race",{"_index":1087,"title":{},"body":{"contributing.html":{}}}],["raw",{"_index":1357,"title":{},"body":{"todo.html":{}}}],["read",{"_index":1332,"title":{},"body":{"index.html":{}}}],["readme",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":1041,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizando",{"_index":242,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["realizar",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["reasonably",{"_index":1135,"title":{},"body":{"contributing.html":{}}}],["recebe",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["recebendo",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["recent",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["recheada",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommended",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":598,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["refer",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["reflect",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["regard",{"_index":1208,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1076,"title":{},"body":{"contributing.html":{}}}],["reject",{"_index":1155,"title":{},"body":{"contributing.html":{}}}],["release",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["religion",{"_index":1088,"title":{},"body":{"contributing.html":{}}}],["reluctantly",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":532,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{},"changelog.html":{},"contributing.html":{}}}],["remove(@param('id",{"_index":569,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":540,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["removed",{"_index":884,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["remover",{"_index":710,"title":{},"body":{"controllers/UserController.html":{}}}],["repercussions",{"_index":1220,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":1371,"title":{},"body":{"todo.html":{}}}],["reported",{"_index":1194,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1209,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1018,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1055,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1189,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1185,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1176,"title":{},"body":{"contributing.html":{}}}],["req",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requisição",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["respectful",{"_index":1099,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1150,"title":{},"body":{"contributing.html":{}}}],["response.dto",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":401,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":407,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":405,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["responsibilities",{"_index":1140,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1153,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1141,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":1201,"title":{},"body":{"contributing.html":{}}}],["results",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["return",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["reviewed",{"_index":1199,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1063,"title":{},"body":{"contributing.html":{}}}],["rewrite",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1152,"title":{},"body":{"contributing.html":{}}}],["rimraf",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["ru",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":1310,"title":{},"body":{"index.html":{}}}],["running",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["russian",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["salvatore",{"_index":354,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":1300,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":1056,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1171,"title":{},"body":{"contributing.html":{}}}],["se",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["second",{"_index":1062,"title":{},"body":{"contributing.html":{}}}],["secret",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["sections",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["seeds",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":478,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["select:this.userselect",{"_index":757,"title":{},"body":{"injectables/UserService.html":{}}}],["sem",{"_index":280,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["semantic",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":909,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["senha",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":749,"title":{},"body":{"injectables/UserService.html":{}}}],["separately",{"_index":1214,"title":{},"body":{"contributing.html":{}}}],["ser",{"_index":326,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{}}}],["serve",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":106,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["setting",{"_index":1139,"title":{},"body":{"contributing.html":{}}}],["seu",{"_index":538,"title":{},"body":{"controllers/ProductController.html":{}}}],["sexual",{"_index":1089,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1115,"title":{},"body":{"contributing.html":{}}}],["showing",{"_index":1109,"title":{},"body":{"contributing.html":{}}}],["side",{"_index":1301,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1058,"title":{},"body":{"contributing.html":{}}}],["signoptions",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["simples",{"_index":614,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["simplified",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["site",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":1078,"title":{},"body":{"contributing.html":{}}}],["slovak",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1180,"title":{},"body":{"contributing.html":{}}}],["somente",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{}}}],["space",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["spaces",{"_index":1174,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":1211,"title":{},"body":{"contributing.html":{}}}],["spelling",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":1326,"title":{},"body":{"index.html":{}}}],["src/.../01",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handle",{"_index":1292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:20",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":100,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:16",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":400,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":395,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":397,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:20",{"_index":398,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":441,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1243,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":408,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:10",{"_index":418,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:11",{"_index":416,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":414,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":419,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":417,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":413,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":423,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:20",{"_index":429,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:28",{"_index":433,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:36",{"_index":436,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":453,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":456,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:12",{"_index":459,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:66",{"_index":460,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":457,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:91",{"_index":461,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/01",{"_index":1248,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/02",{"_index":1251,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/03",{"_index":1253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.module",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":496,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":509,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":515,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":517,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/dto/create",{"_index":295,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":685,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":421,"title":{},"body":{"classes/Order.html":{}}}],["src/product/entities/product.entity.ts",{"_index":522,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":525,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":527,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":524,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":528,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":526,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":523,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":529,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":531,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:19",{"_index":535,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:27",{"_index":536,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:35",{"_index":539,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:43",{"_index":548,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:52",{"_index":543,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":574,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":576,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:17",{"_index":581,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:21",{"_index":582,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:32",{"_index":578,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:41",{"_index":584,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:53",{"_index":580,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:9",{"_index":577,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":321,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":688,"title":{},"body":{"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["src/table/entities/table.entities",{"_index":420,"title":{},"body":{"classes/Order.html":{}}}],["src/table/entities/table.entities.ts",{"_index":623,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entities/table.entities.ts:2",{"_index":625,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entities.ts:3",{"_index":626,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entities.ts:4",{"_index":624,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entities.ts:5",{"_index":627,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":631,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:19",{"_index":639,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:25",{"_index":641,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:32",{"_index":633,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:40",{"_index":644,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:49",{"_index":635,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":666,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":668,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:17",{"_index":672,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:21",{"_index":673,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:32",{"_index":670,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:42",{"_index":674,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:54",{"_index":671,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:9",{"_index":669,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":691,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":694,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":696,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":699,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":700,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":697,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":695,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":701,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":703,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:17",{"_index":705,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:27",{"_index":707,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":709,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:47",{"_index":713,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":711,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":727,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":729,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:14",{"_index":740,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":731,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":734,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":735,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:47",{"_index":732,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:67",{"_index":736,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:92",{"_index":733,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":464,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["standard",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["standardized",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1091,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":843,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["start:dev",{"_index":1313,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1315,"title":{},"body":{"index.html":{}}}],["started",{"_index":767,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["starter",{"_index":1305,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":1335,"title":{},"body":{"index.html":{}}}],["stop",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":382,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["string;*///nao",{"_index":264,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["style",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":802,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["such",{"_index":1129,"title":{},"body":{"contributing.html":{}}}],["summary",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["summary:'atualizar",{"_index":563,"title":{},"body":{"controllers/ProductController.html":{}}}],["summary:'criar",{"_index":555,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["summary:'deletar",{"_index":568,"title":{},"body":{"controllers/ProductController.html":{}}}],["summary:'listar",{"_index":558,"title":{},"body":{"controllers/ProductController.html":{}}}],["summary:'listar/visualizar",{"_index":560,"title":{},"body":{"controllers/ProductController.html":{}}}],["super",{"_index":386,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1327,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1346,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["swedish",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["symbol",{"_index":347,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["são",{"_index":751,"title":{},"body":{"injectables/UserService.html":{}}}],["tabela",{"_index":612,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["table",{"_index":410,"title":{"classes/Table.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.controller",{"_index":667,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":648,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{}}}],["table.dto.ts",{"_index":322,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["table.dto.ts:11",{"_index":328,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.entities",{"_index":676,"title":{},"body":{"injectables/TableService.html":{}}}],["table.service",{"_index":647,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table.ts",{"_index":1254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/table.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["tablecontroller",{"_index":630,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tablemodule",{"_index":83,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tablenumber",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tables",{"_index":1255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tables:table[]=[];//esta",{"_index":675,"title":{},"body":{"injectables/TableService.html":{}}}],["tableservice",{"_index":646,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1145,"title":{},"body":{"contributing.html":{}}}],["tallesl",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["task",{"_index":1369,"title":{},"body":{"todo.html":{}}}],["team",{"_index":1196,"title":{},"body":{"contributing.html":{}}}],["tem",{"_index":588,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["temporarily",{"_index":1163,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1218,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":1318,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1321,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1320,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1317,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1325,"title":{},"body":{"index.html":{}}}],["things",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["this.$connect",{"_index":519,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":520,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findone(id",{"_index":617,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["this.jwtservice.sign({nickname",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(user.id",{"_index":445,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":446,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":449,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order.create",{"_index":477,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":486,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":489,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product.create",{"_index":604,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":622,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":596,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique({where:{id",{"_index":599,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.update",{"_index":619,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table.create",{"_index":680,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.delete",{"_index":684,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":677,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique({where:{id",{"_index":678,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.update",{"_index":683,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user.create",{"_index":755,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":765,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":743,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":764,"title":{},"body":{"injectables/UserService.html":{}}}],["this.productservice.create(createproductdto",{"_index":557,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":570,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":559,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":561,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":565,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableservice.create(createtabledto",{"_index":659,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":662,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":653,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":656,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":660,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userselect",{"_index":744,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":718,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":723,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":720,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":721,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":722,"title":{},"body":{"controllers/UserController.html":{}}}],["threatening",{"_index":1168,"title":{},"body":{"contributing.html":{}}}],["throughout",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["tianshuo",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["todas",{"_index":637,"title":{},"body":{"controllers/TableController.html":{}}}],["todo",{"_index":1354,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["todo.md",{"_index":1355,"title":{},"body":{"todo.html":{}}}],["todos",{"_index":431,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":404,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["touch",{"_index":1336,"title":{},"body":{"index.html":{}}}],["towards",{"_index":1111,"title":{},"body":{"contributing.html":{}}}],["traditional",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["transformer",{"_index":247,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["translation",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["translations",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["trolling",{"_index":1120,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":484,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["turkish",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["twitter",{"_index":1342,"title":{},"body":{"index.html":{}}}],["two",{"_index":1059,"title":{},"body":{"contributing.html":{}}}],["tylerfortune8",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type(()=>createorderproductdto",{"_index":272,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["type:[createorderproductdto",{"_index":273,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["types",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1304,"title":{},"body":{"index.html":{}}}],["typos",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["ukrainian",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["um",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TableController.html":{}}}],["unacceptable",{"_index":1113,"title":{},"body":{"contributing.html":{}}}],["unauthorizedexception",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":235,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/functions.html":{}}}],["understand",{"_index":1359,"title":{},"body":{"todo.html":{}}}],["unicorns",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":1316,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":379,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":1353,"title":{},"body":{"properties.html":{}}}],["unreleased",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1117,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":533,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":564,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":544,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id:string,dto:updateproductdto):promise",{"_index":616,"title":{},"body":{"injectables/ProductService.html":{}}}],["update(id:string,dto:updatetabledto):promise",{"_index":682,"title":{},"body":{"injectables/TableService.html":{}}}],["update(id:string,dto:updateuserdto):promise",{"_index":758,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedat",{"_index":411,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":545,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatetabledto",{"_index":642,"title":{"classes/UpdateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":690,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["url",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"changelog.html":{}}}],["usage",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["usando",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["usar",{"_index":267,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["use",{"_index":876,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["useful",{"_index":1049,"title":{},"body":{"contributing.html":{}}}],["useguards",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":125,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":728,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["user.decorator.ts",{"_index":1240,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":692,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":359,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":355,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":366,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":339,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":350,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":715,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.ts",{"_index":1249,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/user.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["user:user",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["usercontroller",{"_index":702,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":263,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{}}}],["usermodule",{"_index":84,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":1250,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userselect",{"_index":730,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":714,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":844,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["usuário",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["usuários",{"_index":719,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários'})@useguards(undefined)@apibearerauth",{"_index":706,"title":{},"body":{"controllers/UserController.html":{}}}],["utilizado",{"_index":356,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["vai",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["valida",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":251,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":252,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":739,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["vamos",{"_index":265,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["variable",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1046,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["ve",{"_index":269,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["vector",{"_index":348,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["version",{"_index":787,"title":{},"body":{"changelog.html":{},"contributing.html":{},"properties.html":{}}}],["versioning",{"_index":778,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["versions",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":1023,"title":{},"body":{"contributing.html":{}}}],["view",{"_index":1356,"title":{},"body":{"todo.html":{}}}],["viewpoints",{"_index":1101,"title":{},"body":{"contributing.html":{}}}],["vindo",{"_index":592,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{}}}],["visual",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["visualizar",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["vizualizar",{"_index":640,"title":{},"body":{"controllers/TableController.html":{}}}],["void",{"_index":636,"title":{},"body":{"controllers/TableController.html":{}}}],["vs",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["watch",{"_index":1311,"title":{},"body":{"index.html":{}}}],["way",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1340,"title":{},"body":{"index.html":{},"todo.html":{}}}],["webysther",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["welcoming",{"_index":1067,"title":{},"body":{"contributing.html":{}}}],["where:{id",{"_index":620,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["white",{"_index":345,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["wiki",{"_index":1157,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1022,"title":{},"body":{"contributing.html":{}}}],["within",{"_index":1173,"title":{},"body":{"contributing.html":{}}}],["without",{"_index":1133,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":1360,"title":{},"body":{"todo.html":{}}}],["world",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["writes",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["yanked",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["year",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["you'd",{"_index":1330,"title":{},"body":{"index.html":{}}}],["z",{"_index":362,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":361,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zapashcanon",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["zeliosariex",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:20\n                \n            \n\n\n            \n                \n                    Recebe uma requisição GET e retorna um objeto de status\nda aplicação com a URL de documentação\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de Request do Express\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Objeto de status da aplicação\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiTags , ApiOperation} from '@nestjs/swagger';\nimport { Request } from 'express';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {//private pois ninguem vai poder chamar e appcontroller e 'somente para leitura'\n  constructor(private readonly appService: AppService) {}\n\n\n  /**\n   * Recebe uma requisição GET e retorna um objeto de status\n   * da aplicação com a URL de documentação\n   * @param req Objeto de Request do Express\n   * @returns Objeto de status da aplicação\n   */\n  @Get()\n  @ApiOperation({summary: 'Visualizar status da aplicação'})\n  getAppStatus(@Req() req: Request) {\n\n    const baseUrl = req.protocol + '://'+req.get('host')\n\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TableModule } from './table/table.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductModule } from './product/product.module';\nimport { UserModule } from './user/user.module';\nimport { OrderModule } from './order/order.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [TableModule, PrismaModule, ProductModule, UserModule, OrderModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl:string) {\n    return {\n      status: 'Server is running! 🚀',\n      docs: baseUrl + '/api',\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpCode, HttpStatus, Post, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { User } from 'src/user/entities/user.entity';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto:LoginDto):Promise{\n    return this.authService.login(loginDto)\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  profile(@LoggedUser() user:User){\n    return user;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    })],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { LoginDto } from './dto/login.dto';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport * as bcrypt from 'bcrypt'\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n\n  constructor (\n    private readonly prisma:PrismaService,\n    private readonly jwtService:JwtService\n    ){}\n\n  async login(loginDto: LoginDto): Promise {\n\n    const { nickname, password } = loginDto;\n\n    // Procura e checa se o user existe, usando o nickname\n    const user = await this.prisma.user.findUnique({ where: { nickname } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    // Valida se a senha informada é correta\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    delete user.password;\n\n\n    return {\n      token: this.jwtService.sign({nickname}),\n      user,\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Lista com os IDs dos produtos que estão no pedido', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Número da mesa que está realizando o pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsInt, IsPositive, IsUUID, ValidateNested } from \"class-validator\";\nimport { CreateOrderProductDto } from './create-order-product.dto';\n\n\nexport class CreateOrderDto {\n\n  /*@IsUUID()\n  @ApiProperty({\n    description: 'ID do usuário que está criando o pedido',\n    example: '73dffe89-a5bc-4e5e-a939-9c6a267163ca',\n  })\n  userId: string;*///nao vamos mais usar pois o auth ja ve a funcao\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Número da mesa que está realizando o pedido',\n    example: 1,\n  })\n  tableNumber: number;\n\n  @ValidateNested({\n    each:true,\n  })\n  @Type(()=>CreateOrderProductDto)\n  @ApiProperty({\n    description: 'Lista com os IDs dos produtos que estão no pedido',\n    type:[CreateOrderProductDto]\n  })\n  products: CreateOrderProductDto[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Observações do produto', example: 'Sem cebola'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do produto', example: '1c51e725-2063-4714-80e9-9ad9fef2f5a8'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Quantidade de itens no pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsPositive, IsString, IsUUID } from 'class-validator';\n\nexport class CreateOrderProductDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'ID do produto',\n    example: '1c51e725-2063-4714-80e9-9ad9fef2f5a8',\n  })\n  productId: string;\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Quantidade de itens no pedido',\n    example: 1,\n  })\n  quantity: number;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Observações do produto',\n    example: 'Sem cebola',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição do produto', example: 'Pizza de presunto, massa fresca, fermentacao natural'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do produto', example: 'https://i.imgur.com/hNE75Iw.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do produto', example: 'Pizza de Mussarela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Preço do produto', example: 30.99})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsUrl } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do produto',\n    example: 'Pizza de Mussarela',\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Descrição do produto',\n    example:\n      'Pizza de presunto, massa fresca, fermentacao natural',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Preço do produto',\n    example: 30.99,\n  })\n  price: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do produto',\n    example: 'https://i.imgur.com/hNE75Iw.png',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive({message: 'Numero deve ser positivo'})@ApiProperty({description: 'O número da mesa', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/dto/create-table.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsPositive } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateTableDto{\n  @IsNumber()\n  @IsPositive({message:'Numero deve ser positivo'})\n  @ApiProperty({\n    description: 'O número da mesa',\n    example: 1,\n  })\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A confirmação da senha deve ser igual a senha', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de perfil do usuário', example: 'https://media.istockphoto.com/vectors/user-icon-flat-isolated-on-white-background-user-symbol-vector-vector-id1300845620?k=20&m=1300845620&s=612x612&w=0&h=f4XTZDAv7NPuZbG0habSpU0sNgECM0X7nbKzTUta3n8='})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do usuário. Apenas para exibição', example: 'Paulo Salvatore'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome de usuário. Utilizado no login. Deve ser único', example: 'paulosalvatore'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUrl, Matches, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome de usuário. Utilizado no login. Deve ser único',\n    example: 'paulosalvatore',\n  })\n  nickname: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do usuário. Apenas para exibição',\n    example: 'Paulo Salvatore',\n  })\n  name: string;\n\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário para login',\n    example: 'Abcd@1234',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'A confirmação da senha deve ser igual a senha',\n    example: 'Abcd@1234',\n  })\n  confirmPassword: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de perfil do usuário',\n    example: 'https://media.istockphoto.com/vectors/user-icon-flat-isolated-on-white-background-user-symbol-vector-vector-id1300845620?k=20&m=1300845620&s=612x612&w=0&h=f4XTZDAv7NPuZbG0habSpU0sNgECM0X7nbKzTUta3n8=',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { nickname: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { nickname: payload.nickname },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Usuário não existe ou não está autenticado',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nickname do usuário', example: 'paulosalvatore'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nickname do usuário',\n    example: 'paulosalvatore',\n  })\n  nickname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abcd@1234',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                    Optional\n                                table\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \"src/user/entities/user.entity\";\nimport { Table } from \"src/table/entities/table.entities\";\nimport { Product } from \"src/product/entities/product.entity\";\n\nexport class Order {\n  id?: string;\n  user?: User;\n  table?: Table;\n  createdAt?: Date;\n  updatedAt?: Date;\n  products?: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os pedidos'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um pedido pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body,  Param, UseGuards, } from '@nestjs/common';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { OrderService } from './order.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\n\n@ApiTags('order')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um pedido',\n  })\n  create(@LoggedUser() user:User, @Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(user.id, createOrderDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os pedidos',\n  })\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um pedido pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n\n@Module({\n  imports:[PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [OrderController],\n  providers: [OrderService]\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Injectable()\nexport class OrderService {\n  constructor (private readonly prisma: PrismaService){}\n\n\n  create(userId:string, createOrderDto: CreateOrderDto) {\n    const data: Prisma.OrderCreateInput = {\n      user:{\n        connect:{\n          id:userId,\n        }\n      },\n      Table:{\n        connect:{\n          number:createOrderDto.tableNumber,\n        },\n      },\n      products:{\n        createMany:{\n          data:createOrderDto.products.map((createOrderProductDto) =>\n          ({\n            productId: createOrderProductDto.productId,\n            quantity: createOrderProductDto.quantity,\n            description: createOrderProductDto.description,\n          })),\n        }\n      },\n\n    };\n\n    return this.prisma.order.create({\n      data,\n      select:{\n        id:true,\n        Table:{\n          select:{\n            number:true\n          }\n        },\n        user:{\n          select:{\n            name:true\n          }\n        },\n        products:{\n          select:{\n            quantity:true,\n            description:true,\n            product:{\n              select:{\n                name: true,\n              },\n            },\n          },\n        },\n      },\n    }).catch(handleError)\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      select:{\n        id:true,\n        Table:{\n          select:{\n            number:true,\n          },\n        },\n        user:{\n          select:{\n            name:true,\n          },\n        },\n        _count:{\n          select:{\n            products:true,\n          }\n        }\n\n      }\n    }\n    );\n  }\n\n  findOne(id: string) {\n    return this.prisma.order.findUnique({\n      where: { id },\n      include: {\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        Table: {\n          select: {\n            number: true,\n          },\n        },\n        products: {\n          select: {\n            product:{\n              select:{\n                id:true,\n                name:true,\n                price:true,\n                image:true,\n                description:true,\n\n              }\n            }\n          },\n        },\n      },\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],//vai permitir ser chamado em outros lugar no codigo pra acionar o BD\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string;\n  name: string;\n  description: string;\n  price: number;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Listar/visualizar um produto pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um produto pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Atualizar um produto pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  @ApiOperation({\n    summary:'Criar um produto'\n  })\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary:'Listar todos produto'\n  })\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary:'Listar/visualizar um produto pelo seu ID'\n  })\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary:'Atualizar um produto pelo seu ID'\n  })\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary:'Deletar um produto pelo seu ID'\n  })\n  remove(@Param('id') id: string) {\n    return this.productService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports:[PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ProductController],\n  providers: [ProductService]\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createproductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createproductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { Product } from './entities/product.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { handleError } from 'src/utils/handle-error.util';\n\n@Injectable()\nexport class ProductService {\n\n//classe: tem atributos e metodos\n\n  //products:product[]=[];//esta vindo do product.entities--- é um atributo de product\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll():Promise{\n    return this.prisma.product.findMany();\n  }\n\n  async findOne(id:string): Promise{\n    const record= await this.prisma.product.findUnique({where:{id}})\n\n    if (!record){\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`);\n    }\n\n    return record;\n\n  }\n\n  create(createproductDto:CreateProductDto):Promise{\n    const data: Product = { ...createproductDto };//antes: const product: product\n\n    return this.prisma.product.create({\n      data,//antes:  data:product--- como no this ja esta recebendo e na linha 20 ja esta recebendo a tabela fica mais simples assim\n    }).catch(handleError);\n\n  }\n\n  async update(id:string,dto:UpdateProductDto):Promise{\n\n    await this.findOne(id);\n\n    const data:Partial = {... dto};\n\n    return this.prisma.product.update({\n      where:{id},\n      data,\n    });\n  }\n\n  async delete(id:string){\n\n    await this.findOne(id);\n\n    await this.prisma.product.delete({\n      where:{id}\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/entities/table.entities.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entities.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entities.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entities.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entities.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Table{\n  id?:string;\n  number:number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                table\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTableDto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'criar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTableDto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deleta uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'listar todas as mesas'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'vizualizar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Atualizar/Editar uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post , Put, Delete, Param, Patch, HttpCode, HttpStatus, UseGuards} from '@nestjs/common';\nimport { TableService } from './table.service';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { Table } from './entities/table.entities';\nimport { ApiTags , ApiOperation, ApiBearerAuth} from '@nestjs/swagger';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('table')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('table')\nexport class TableController {\n\n  constructor(private tableService: TableService){}\n\n  @Get()\n  @ApiOperation({summary:'listar todas as mesas'})\n  findAll(): Promise{\n    return this.tableService.findAll()\n  }\n\n  @Get(':id')\n  @ApiOperation({summary:'vizualizar uma mesa'})\n  findOne(@Param('id') id:string): Promise{\n    return this.tableService.findOne(id);\n  }\n\n\n  @Post()\n  @ApiOperation({summary:'criar uma mesa'})\n  create(@Body() createTableDto:CreateTableDto): Promise {\n    return this.tableService.create(createTableDto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Atualizar/Editar uma mesa pelo ID',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateTableDto): Promise {\n    return this.tableService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deleta uma mesa pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.tableService.delete(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_TableModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TableService } from './table.service';\nimport { TableController } from './table.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports:[PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  providers: [TableService],\n  controllers: [TableController]\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTableDto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTableDto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { Table } from './entities/table.entities';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { handleError } from 'src/utils/handle-error.util';\n\n@Injectable()\nexport class TableService {\n\n//classe: tem atributos e metodos\n\n  //tables:Table[]=[];//esta vindo do table.entities--- é um atributo de Table\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll():Promise{\n    return this.prisma.table.findMany();\n  }\n\n  async findOne(id:string): Promise{\n    const record= await this.prisma.table.findUnique({where:{id}})\n\n    if (!record){\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`);\n    }\n\n    return record;\n\n  }\n\n  create(createTableDto:CreateTableDto):Promise{\n    const data: Table = { ...createTableDto };//antes: const table: Table\n\n    return this.prisma.table.create({\n      data,//antes:  data:table--- como no this ja esta recebendo e na linha 20 ja esta recebendo a tabela fica mais simples assim\n    }).catch(handleError);\n\n  }\n\n\n  async update(id:string,dto:UpdateTableDto):Promise{\n\n    await this.findOne(id);\n\n    const data:Partial = {... dto};\n\n    return this.prisma.table.update({\n      where:{id},\n      data,\n    });\n  }\n\n  async delete(id:string){\n\n    await this.findOne(id);\n\n    await this.prisma.table.delete({\n      where:{id}\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableDto.html":{"url":"classes/UpdateTableDto.html","title":"class - UpdateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTableDto } from './create-table.dto';\n\nexport class UpdateTableDto extends PartialType(CreateTableDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  nickname: string;\n  name: string;\n  password: string;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os usuários'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary:'Criar um usuário'\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os usuários',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  remove(@Param('id') id: string) {\n    return this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n\n}\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from './entities/user.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport * as bcrypt from 'bcrypt';\nimport { handleError } from 'src/utils/handle-error.util';\n\n@Injectable()\nexport class UserService {\n\n//classe: tem atributos e metodos\n\nprivate userSelect = {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n\n}\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll():Promise{\n    return this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n  }\n\n  async findOne(id:string): Promise{\n    const record= await this.prisma.user.findUnique({\n      where:{id},\n      select: this.userSelect,\n    })\n\n    if (!record){\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`);\n    }\n\n    return record;\n\n  }\n\n  async create(createUserDto:CreateUserDto):Promise{\n\n    if(createUserDto.password != createUserDto.confirmPassword){\n      throw new BadRequestException('As senhas informadas não são iguais.')\n    }\n\n    delete createUserDto.confirmPassword;\n\n    const data: User = {\n      ...createUserDto,\n      password:await bcrypt.hash(createUserDto.password,10),\n    };//antes: const user: user\n\n    return this.prisma.user.create({\n      data,//antes:  data:user--- como no this ja esta recebendo e na linha 20 ja esta recebendo a tabela fica mais simples assim\n      select:this.userSelect,\n    }).catch(handleError);\n\n  }\n\n  async update(id:string,dto:UpdateUserDto):Promise{\n\n    await this.findOne(id);\n    \n    if(dto.password){\n      if(dto.password != dto.confirmPassword){\n        throw new BadRequestException('As senhas informadas não são iguais.')\n      }\n    }\n\n    delete dto.confirmPassword;\n\n    const data:Partial = {... dto};\n\n    if(data.password){\n      data.password = await bcrypt.hash(data.password,10)\n    }\n\n    return this.prisma.user.update({\n      where:{id},\n      data,\n      select:this.userSelect,\n    });\n  }\n\n  async delete(id:string){\n\n    await this.findOne(id);\n\n    await this.prisma.user.delete({\n      where:{id}\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog, and this project adheres\nto Semantic Versioning.\nUnreleased\n1.0.0 - 2017-06-20\nAdded\n\nNew visual identity by @tylerfortune8.\nVersion navigation.\nLinks to latest released version in previous versions.\n\"Why keep a changelog?\" section.\n\"Who needs a changelog?\" section.\n\"How do I make a changelog?\" section.\n\"Frequently Asked Questions\" section.\nNew \"Guiding Principles\" sub-section to \"How do I make a changelog?\".\nSimplified and Traditional Chinese translations from @tianshuo.\nGerman translation from @mpbzh & @Art4.\nItalian translation from @azkidenz.\nSwedish translation from @magol.\nTurkish translation from @karalamalar.\nFrench translation from @zapashcanon.\nBrazilian Portugese translation from @Webysther.\nPolish translation from @amielucha & @m-aciek.\nRussian translation from @aishek.\nCzech translation from @h4vry.\nSlovak translation from @jkostolansky.\nKorean translation from @pierceh89.\nCroatian translation from @porx.\nPersian translation from @Hameds.\nUkrainian translation from @osadchyi-s.\n\nChanged\n\nStart using \"changelog\" over \"change log\" since it's the common usage.\nStart versioning based on the current English version at 0.3.0 to help translation authors keep things up-to-date.\nRewrite \"What makes unicorns cry?\" section.\nRewrite \"Ignoring Deprecations\" sub-section to clarify the ideal scenario.\nImprove \"Commit log diffs\" sub-section to further argument against them.\nMerge \"Why can’t people just use a git log diff?\" with \"Commit log diffs\"\nFix typos in Simplified Chinese and Traditional Chinese translations.\nFix typos in Brazilian Portuguese translation.\nFix typos in Turkish translation.\nFix typos in Czech translation.\nFix typos in Swedish translation.\nImprove phrasing in French translation.\nFix phrasing and spelling in German translation.\n\nRemoved\n\nSection about \"changelog\" vs \"CHANGELOG\".\n\n0.3.0 - 2015-12-03\nAdded\n\nRU translation from @aishek.\npt-BR translation from @tallesl.\nes-ES translation from @ZeliosAriex.\n\n0.2.0 - 2015-10-06\nChanged\n\nRemove exclusionary mentions of \"open source\" since this project can benefit both \"open\" and \"closed\" source projects\nequally.\n\n0.1.0 - 2015-10-06\nAdded\n\nAnswer \"Should you ever rewrite a change log?\".\n\nChanged\n\nImprove argument against commit logs.\nStart following SemVer properly.\n\n0.0.8 - 2015-02-17\nChanged\n\nUpdate year to match in every README example.\nReluctantly stop making fun of Brits only, since most of the world writes dates in a strange way.\n\nFixed\n\nFix typos in recent README changes.\nUpdate outdated unreleased diff link.\n\n0.0.7 - 2015-02-16\nAdded\n\nLink, and make it obvious that date format is ISO 8601.\n\nChanged\n\nClarified the section on \"Is there a standard change log format?\".\n\nFixed\n\nFix Markdown links to tag comparison URL with footnote-style links.\n\n0.0.6 - 2014-12-12\nAdded\n\nREADME section on \"yanked\" releases.\n\n0.0.5 - 2014-08-09\nAdded\n\nMarkdown links to version tags on release headings.\nUnreleased section to gather unreleased changes and encourage note keeping prior to releases.\n\n0.0.4 - 2014-08-09\nAdded\n\nBetter explanation of the difference between the file (\"CHANGELOG\")\nand its function \"the change log\".\n\nChanged\n\nRefer to a \"change log\" instead of a \"CHANGELOG\" throughout the site to differentiate between the file and the purpose\nof the file — the logging of changes.\n\nRemoved\n\nRemove empty sections from CHANGELOG, they occupy too much space and create too much noise in the file. People will\nhave to assume that the missing sections were intentionally left out because they contained no notable changes.\n\n0.0.3 - 2014-08-09\nAdded\n\n\"Why should I care?\" section mentioning The Changelog podcast.\n\n0.0.2 - 2014-07-10\nAdded\n\nExplanation of the recommended reverse chronological release ordering.\n\n0.0.1 - 2014-05-31\nAdded\n\nThis CHANGELOG file to hopefully serve as an evolving example of a standardized open source project CHANGELOG.\nCNAME file to enable GitHub Pages custom domain\nREADME now contains answers to common questions about CHANGELOGs\nGood examples and basic guidelines, including proper date formatting.\nCounter-examples: \"What makes unicorns cry?\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue, email, or any other\nmethod with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a build.\nUpdate the README.md with details of changes to the interface, this includes new environment variables, exposed\nports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this Pull Request would\nrepresent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have\npermission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making\nparticipation in our project and our community a harassment-free experience for everyone, regardless of age, body size,\ndisability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment include:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or advances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic address, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take\nappropriate and fair corrective action in response to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits,\nissues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any\ncontributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the\nproject or its community. Examples of representing a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed representative at an online or offline\nevent. Representation of a project may be further defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team\nat [INSERT EMAIL ADDRESS]. All complaints will be reviewed and investigated and will result in a response that is deemed\nnecessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to\nthe reporter of an incident. Further details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent\nrepercussions as determined by other members of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4, available\nat http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/02-product.ts\n            \n            variable\n            product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/02-product.ts\n            \n            variable\n            products\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/03-table.ts\n            \n            variable\n            table\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/03-table.ts\n            \n            variable\n            tables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/table/dto/update-table.dto.ts\n            \n            class\n            UpdateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/table/entities/table.entities.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.14.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nExample of TODO.md\nThis is an example of TODO.md\nView the raw content of this file to understand the format.\nTodo\n\n Work on the website ~3d #feat @john 2020-03-20\n Fix the homepage ~1d #bug @jane\n Sub-task or description\n\n\n\nIn Progress\n\n Work on Github Repo [JIRA-345]\n\nDone ✓\n\n Create my first TODO.md\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            product   (src/.../02-product.ts)\n                        \n                        \n                            products   (src/.../02-product.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            table   (src/.../03-table.ts)\n                        \n                        \n                            tables   (src/.../03-table.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries(seed)\n                    \n                \n\n\n        \n    \n\n    src/prisma/02-product.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(products)) {\n    await prisma.product.upsert({\n      where: { name: obj.name },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.ProductCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Pizza de Mussarela',\n    description:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n  {\n    name: 'Pizza de Calabresa',\n    description:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n  {\n    name: 'Pizza de Frango com Catupiry',\n    description:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/03-table.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(tables)) {\n    await prisma.table.upsert({\n      where: { number: obj.number },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.TableCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    number: 1,\n  },\n  {\n    number: 2,\n  },\n  {\n    number: 3,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(users)) {\n    await prisma.user.upsert({\n      where: { nickname: obj.nickname },\n      update: {},\n      create: {\n        ...obj,\n        password: await bcrypt.hash(obj.password, 10),\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    nickname: 'paulosalvatore',\n    name: 'Paulo Salvatore',\n    password: 'Abcd@1234',\n    image: 'https://avatars.githubusercontent.com/u/7906171',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
